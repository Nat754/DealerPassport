{
  "uid" : "d9c5e06e2f17a336",
  "name" : "Проверка доступности /reports/",
  "fullName" : "tests.main_page_test.TestMainPageSmoke#test_get_urls",
  "historyId" : "9331aa41826d240f449e55081138a05e",
  "time" : {
    "start" : 1731411752913,
    "stop" : 1731411752913,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "requests.exceptions.MissingSchema: Invalid URL '/reports/': No scheme supplied. Perhaps you meant https:///reports/?",
  "statusTrace" : "self = <tests.main_page_test.TestMainPageSmoke object at 0x7fc907ee4860>\nurl = '/reports/'\n\n    @pytest.mark.parametrize('url', Urls.LIST_URLS)\n    def test_get_urls(self, url):\n        allure.dynamic.title(f'Проверка доступности {url}')\n        headers = Tokens.TOKEN_PROD\n>       response = requests.request(\"GET\", url, headers=headers)\n\ntests/main_page_test.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/requests/api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/requests/sessions.py:575: in request\n    prep = self.prepare_request(req)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/requests/sessions.py:486: in prepare_request\n    p.prepare(\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/requests/models.py:368: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PreparedRequest [GET]>, url = '/reports/', params = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n>           raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\nE           requests.exceptions.MissingSchema: Invalid URL '/reports/': No scheme supplied. Perhaps you meant https:///reports/?\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/requests/models.py:439: MissingSchema",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1731411751882,
      "stop" : 1731411751883,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование главной страницы"
  }, {
    "name" : "tag",
    "value" : "smoke_test"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "main_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestMainPageSmoke"
  }, {
    "name" : "host",
    "value" : "fv-az773-327"
  }, {
    "name" : "thread",
    "value" : "2230-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.main_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'/reports/'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "9f8eb9dd4f0fa106",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/13//#testresult/9f8eb9dd4f0fa106",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.MissingSchema: Invalid URL '/reports/': No scheme supplied. Perhaps you meant https:///reports/?",
        "time" : {
          "start" : 1731410910447,
          "stop" : 1731410910447,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ "smoke_test" ]
  },
  "source" : "d9c5e06e2f17a336.json",
  "parameterValues" : [ "'/reports/'" ]
}