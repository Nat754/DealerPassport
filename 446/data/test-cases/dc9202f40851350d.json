{
  "uid" : "dc9202f40851350d",
  "name" : "Проверить отображение кнопок меню",
  "fullName" : "tests.main_page_test.TestMainPageSmoke#test_button_menu",
  "historyId" : "0ffad159c86e19d744ead463a95a9833",
  "time" : {
    "start" : 1754918159453,
    "stop" : 1754918219658,
    "duration" : 60205
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <tests.main_page_test.TestMainPageSmoke object at 0x7f5adba51f40>\nauth_user_admin = <pages.main_page.MainPage object at 0x7f5adbaf00e0>\n\n    @allure.title('Проверить отображение кнопок меню')\n    def test_button_menu(self, auth_user_admin):\n>       text = [item.text for item in auth_user_admin.check_menu()]\n\ntests/main_page_test.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:77: in check_menu\n    return self.elements_are_visible(self.locator.MENU)\npages/base_page.py:27: in elements_are_visible\n    return Wait(self.driver, self.timeout).until(ec.visibility_of_all_elements_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"388e99c4d9714c872432b8de410a0ca9\")>\nmethod = <function visibility_of_all_elements_located.<locals>._predicate at 0x7f5adbaec040>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "auth_user_admin",
    "time" : {
      "start" : 1754918155953,
      "stop" : 1754918159453,
      "duration" : 3500
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки '('xpath', '//span[text()=\"Согласен\"]')' на главной странице",
      "time" : {
        "start" : 1754918159346,
        "stop" : 1754918159375,
        "duration" : 29
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1754918155599,
      "stop" : 1754918155953,
      "duration" : 354
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1754916633204,
      "stop" : 1754916633204,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <tests.main_page_test.TestMainPageSmoke object at 0x7f5adba51f40>\nauth_user_admin = <pages.main_page.MainPage object at 0x7f5adbaf00e0>\n\n    @allure.title('Проверить отображение кнопок меню')\n    def test_button_menu(self, auth_user_admin):\n>       text = [item.text for item in auth_user_admin.check_menu()]\n\ntests/main_page_test.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:77: in check_menu\n    return self.elements_are_visible(self.locator.MENU)\npages/base_page.py:27: in elements_are_visible\n    return Wait(self.driver, self.timeout).until(ec.visibility_of_all_elements_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"388e99c4d9714c872432b8de410a0ca9\")>\nmethod = <function visibility_of_all_elements_located.<locals>._predicate at 0x7f5adbaec040>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException",
    "steps" : [ {
      "name" : "Проверка отображения меню в шапке портала",
      "time" : {
        "start" : 1754918159453,
        "stop" : 1754918219657,
        "duration" : 60204
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/DealerPassport/DealerPassport/pages/main_page.py\", line 77, in check_menu\n    return self.elements_are_visible(self.locator.MENU)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/DealerPassport/DealerPassport/pages/base_page.py\", line 27, in elements_are_visible\n    return Wait(self.driver, self.timeout).until(ec.visibility_of_all_elements_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "d2c8198c2882fbec",
      "name" : "Screenshot",
      "source" : "d2c8198c2882fbec.png",
      "type" : "image/png",
      "size" : 221691
    }, {
      "uid" : "f1ce1152c5ff6a0b",
      "name" : "HTML source",
      "source" : "f1ce1152c5ff6a0b.html",
      "type" : "text/html",
      "size" : 84553
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1754918219805,
      "stop" : 1754918219885,
      "duration" : 80
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Тестирование главной страницы"
  }, {
    "name" : "tag",
    "value" : "auto_test"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "main_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestMainPageSmoke"
  }, {
    "name" : "host",
    "value" : "pkrvmsl9tci6h6u"
  }, {
    "name" : "thread",
    "value" : "2536-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.main_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 62,
        "unknown" : 0,
        "total" : 65
      },
      "items" : [ {
        "uid" : "a56668e18cf1dd1a",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/446//#testresult/a56668e18cf1dd1a",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
        "time" : {
          "start" : 1754914582772,
          "stop" : 1754914642953,
          "duration" : 60181
        }
      }, {
        "uid" : "9dc4c100b3a1b11e",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/446//#testresult/9dc4c100b3a1b11e",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
        "time" : {
          "start" : 1754912090379,
          "stop" : 1754912150555,
          "duration" : 60176
        }
      }, {
        "uid" : "a83769c1514fd853",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/446//#testresult/a83769c1514fd853",
        "status" : "passed",
        "time" : {
          "start" : 1754858724826,
          "stop" : 1754858724860,
          "duration" : 34
        }
      }, {
        "uid" : "1a4515e170265308",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/445//#testresult/1a4515e170265308",
        "status" : "passed",
        "time" : {
          "start" : 1754788832210,
          "stop" : 1754788832244,
          "duration" : 34
        }
      }, {
        "uid" : "5fb98d4186ad24d6",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/445//#testresult/5fb98d4186ad24d6",
        "status" : "passed",
        "time" : {
          "start" : 1754772420707,
          "stop" : 1754772420741,
          "duration" : 34
        }
      }, {
        "uid" : "59612bc08b411aa4",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/444//#testresult/59612bc08b411aa4",
        "status" : "passed",
        "time" : {
          "start" : 1754686054646,
          "stop" : 1754686054679,
          "duration" : 33
        }
      }, {
        "uid" : "45fc54360d4789d1",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/443//#testresult/45fc54360d4789d1",
        "status" : "passed",
        "time" : {
          "start" : 1754599670302,
          "stop" : 1754599670336,
          "duration" : 34
        }
      }, {
        "uid" : "52d093e2251c8f95",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/442//#testresult/52d093e2251c8f95",
        "status" : "passed",
        "time" : {
          "start" : 1754513258471,
          "stop" : 1754513258504,
          "duration" : 33
        }
      }, {
        "uid" : "90591edb2b9017e2",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/441//#testresult/90591edb2b9017e2",
        "status" : "passed",
        "time" : {
          "start" : 1754426800481,
          "stop" : 1754426800512,
          "duration" : 31
        }
      }, {
        "uid" : "d98cd86114a8317",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/440//#testresult/d98cd86114a8317",
        "status" : "passed",
        "time" : {
          "start" : 1754340524705,
          "stop" : 1754340524741,
          "duration" : 36
        }
      }, {
        "uid" : "18d6fffd050c2e39",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/439//#testresult/18d6fffd050c2e39",
        "status" : "passed",
        "time" : {
          "start" : 1754253999626,
          "stop" : 1754253999664,
          "duration" : 38
        }
      }, {
        "uid" : "e32561ae7124b85e",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/438//#testresult/e32561ae7124b85e",
        "status" : "passed",
        "time" : {
          "start" : 1754167527865,
          "stop" : 1754167527906,
          "duration" : 41
        }
      }, {
        "uid" : "736abf9996694527",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/437//#testresult/736abf9996694527",
        "status" : "passed",
        "time" : {
          "start" : 1754081260922,
          "stop" : 1754081260956,
          "duration" : 34
        }
      }, {
        "uid" : "9805f6420ef23989",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/436//#testresult/9805f6420ef23989",
        "status" : "passed",
        "time" : {
          "start" : 1753994869472,
          "stop" : 1753994869508,
          "duration" : 36
        }
      }, {
        "uid" : "cdfb26f3a0f92e8f",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/435//#testresult/cdfb26f3a0f92e8f",
        "status" : "passed",
        "time" : {
          "start" : 1753908404364,
          "stop" : 1753908404396,
          "duration" : 32
        }
      }, {
        "uid" : "6415705c15bd3c71",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/434//#testresult/6415705c15bd3c71",
        "status" : "passed",
        "time" : {
          "start" : 1753822141249,
          "stop" : 1753822141283,
          "duration" : 34
        }
      }, {
        "uid" : "f406b227ed59b0f0",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/433//#testresult/f406b227ed59b0f0",
        "status" : "passed",
        "time" : {
          "start" : 1753735663376,
          "stop" : 1753735663407,
          "duration" : 31
        }
      }, {
        "uid" : "4ebc44a98a50188a",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/432//#testresult/4ebc44a98a50188a",
        "status" : "passed",
        "time" : {
          "start" : 1753649131930,
          "stop" : 1753649131970,
          "duration" : 40
        }
      }, {
        "uid" : "41734e082199240c",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/431//#testresult/41734e082199240c",
        "status" : "passed",
        "time" : {
          "start" : 1753562767422,
          "stop" : 1753562767458,
          "duration" : 36
        }
      }, {
        "uid" : "860fb4869d1db019",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/430//#testresult/860fb4869d1db019",
        "status" : "passed",
        "time" : {
          "start" : 1753476436866,
          "stop" : 1753476436899,
          "duration" : 33
        }
      } ]
    },
    "tags" : [ "auto_test" ]
  },
  "source" : "dc9202f40851350d.json",
  "parameterValues" : [ ]
}