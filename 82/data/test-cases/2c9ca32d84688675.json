{
  "uid" : "2c9ca32d84688675",
  "name" : "test_open_seo_prod[https://dealer-passport-test.xsfera.ru:3001/q/]",
  "fullName" : "tests.main_page_test.TestMainPageSmoke#test_open_seo_prod",
  "historyId" : "d98e8f10c235e38341170d6c6a1c1f2a",
  "time" : {
    "start" : 1723428641657,
    "stop" : 1723428641657,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x5589cd38971a <unknown>\n#1 0x5589cd05a481 <unknown>\n#2 0x5589cd0fce51 <unknown>\n#3 0x5589cd0cc8e2 <unknown>\n#4 0x5589cd0eb08a <unknown>\n#5 0x5589cd0cc683 <unknown>\n#6 0x5589cd09cd71 <unknown>\n#7 0x5589cd09d7de <unknown>\n#8 0x5589cd3512ab <unknown>\n#9 0x5589cd355242 <unknown>\n#10 0x5589cd33e665 <unknown>\n#11 0x5589cd355dd2 <unknown>\n#12 0x5589cd3232af <unknown>\n#13 0x5589cd378eb8 <unknown>\n#14 0x5589cd379090 <unknown>\n#15 0x5589cd3884ec <unknown>\n#16 0x7f5ac8694ac3 <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6dd54391a2f412dd924c99c6396c6d9a\")>\n\n    @pytest.fixture\n    def auth_user_admin_to_seo_prod(driver):\n        main_page = MainPage(driver)\n        url = Urls.MAIN_URL_SEO_PROD + Urls.AUTH\n        cookies = {'name': 'token', 'value': os.environ[\"SEO_ADMIN\"]}\n        driver.get(url)\n>       driver.add_cookie(cookies)\n\ntests/conftest.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:636: in add_cookie\n    self.execute(Command.ADD_COOKIE, {\"cookie\": cookie_dict})\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f04e1adc260>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid cookie domain\",\"message\":\"invalid cookie domain\\\\n  (Session info...\\\\n#14 0x5589cd379090 \\\\u003Cunknown>\\\\n#15 0x5589cd3884ec \\\\u003Cunknown>\\\\n#16 0x7f5ac8694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\nE         (Session info: chrome-headless-shell=127.0.6533.88)\nE       Stacktrace:\nE       #0 0x5589cd38971a <unknown>\nE       #1 0x5589cd05a481 <unknown>\nE       #2 0x5589cd0fce51 <unknown>\nE       #3 0x5589cd0cc8e2 <unknown>\nE       #4 0x5589cd0eb08a <unknown>\nE       #5 0x5589cd0cc683 <unknown>\nE       #6 0x5589cd09cd71 <unknown>\nE       #7 0x5589cd09d7de <unknown>\nE       #8 0x5589cd3512ab <unknown>\nE       #9 0x5589cd355242 <unknown>\nE       #10 0x5589cd33e665 <unknown>\nE       #11 0x5589cd355dd2 <unknown>\nE       #12 0x5589cd3232af <unknown>\nE       #13 0x5589cd378eb8 <unknown>\nE       #14 0x5589cd379090 <unknown>\nE       #15 0x5589cd3884ec <unknown>\nE       #16 0x7f5ac8694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidCookieDomainException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1723428641658,
      "stop" : 1723428641858,
      "duration" : 200
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_user_admin_to_seo_prod",
    "time" : {
      "start" : 1723428641858,
      "stop" : 1723428642192,
      "duration" : 334
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x5589cd38971a <unknown>\n#1 0x5589cd05a481 <unknown>\n#2 0x5589cd0fce51 <unknown>\n#3 0x5589cd0cc8e2 <unknown>\n#4 0x5589cd0eb08a <unknown>\n#5 0x5589cd0cc683 <unknown>\n#6 0x5589cd09cd71 <unknown>\n#7 0x5589cd09d7de <unknown>\n#8 0x5589cd3512ab <unknown>\n#9 0x5589cd355242 <unknown>\n#10 0x5589cd33e665 <unknown>\n#11 0x5589cd355dd2 <unknown>\n#12 0x5589cd3232af <unknown>\n#13 0x5589cd378eb8 <unknown>\n#14 0x5589cd379090 <unknown>\n#15 0x5589cd3884ec <unknown>\n#16 0x7f5ac8694ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 917, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/DealerPassport/DealerPassport/tests/conftest.py\", line 28, in auth_user_admin_to_seo_prod\n    driver.add_cookie(cookies)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 636, in add_cookie\n    self.execute(Command.ADD_COOKIE, {\"cookie\": cookie_dict})\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1723428577028,
      "stop" : 1723428577028,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1723428642223,
      "stop" : 1723428642281,
      "duration" : 58
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Main Page smoke_test"
  }, {
    "name" : "tag",
    "value" : "smoke_test"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "main_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestMainPageSmoke"
  }, {
    "name" : "host",
    "value" : "fv-az1501-607"
  }, {
    "name" : "thread",
    "value" : "2340-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.main_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'https://dealer-passport-test.xsfera.ru:3001/q/'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 75,
        "unknown" : 0,
        "total" : 80
      },
      "items" : [ {
        "uid" : "aa701dee938a1837",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/81//#testresult/aa701dee938a1837",
        "status" : "passed",
        "time" : {
          "start" : 1723342744441,
          "stop" : 1723342755332,
          "duration" : 10891
        }
      }, {
        "uid" : "9c5e3e6a6eb24ada",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/80//#testresult/9c5e3e6a6eb24ada",
        "status" : "passed",
        "time" : {
          "start" : 1723256017214,
          "stop" : 1723256028143,
          "duration" : 10929
        }
      }, {
        "uid" : "434adea02a74df21",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/79//#testresult/434adea02a74df21",
        "status" : "passed",
        "time" : {
          "start" : 1723169657690,
          "stop" : 1723169668453,
          "duration" : 10763
        }
      }, {
        "uid" : "49d0925a01aca47c",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/78//#testresult/49d0925a01aca47c",
        "status" : "passed",
        "time" : {
          "start" : 1723083222346,
          "stop" : 1723083233247,
          "duration" : 10901
        }
      }, {
        "uid" : "3debda57817e1370",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/77//#testresult/3debda57817e1370",
        "status" : "passed",
        "time" : {
          "start" : 1722996841716,
          "stop" : 1722996852514,
          "duration" : 10798
        }
      }, {
        "uid" : "c08521a0f3876b67",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/76//#testresult/c08521a0f3876b67",
        "status" : "passed",
        "time" : {
          "start" : 1722910319432,
          "stop" : 1722910330267,
          "duration" : 10835
        }
      }, {
        "uid" : "c52e0672bc33546e",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/75//#testresult/c52e0672bc33546e",
        "status" : "passed",
        "time" : {
          "start" : 1722824059424,
          "stop" : 1722824070310,
          "duration" : 10886
        }
      }, {
        "uid" : "a12caee0477f6dcc",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/74//#testresult/a12caee0477f6dcc",
        "status" : "passed",
        "time" : {
          "start" : 1722737789603,
          "stop" : 1722737800394,
          "duration" : 10791
        }
      }, {
        "uid" : "aa42c724e8f70d97",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/73//#testresult/aa42c724e8f70d97",
        "status" : "passed",
        "time" : {
          "start" : 1722650982173,
          "stop" : 1722650992937,
          "duration" : 10764
        }
      }, {
        "uid" : "55f728f48a427d32",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/72//#testresult/55f728f48a427d32",
        "status" : "passed",
        "time" : {
          "start" : 1722564910751,
          "stop" : 1722564921532,
          "duration" : 10781
        }
      }, {
        "uid" : "d38bab08c51f4da4",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/71//#testresult/d38bab08c51f4da4",
        "status" : "passed",
        "time" : {
          "start" : 1722478744153,
          "stop" : 1722478755072,
          "duration" : 10919
        }
      }, {
        "uid" : "92be0c41cb3d859f",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/70//#testresult/92be0c41cb3d859f",
        "status" : "passed",
        "time" : {
          "start" : 1722390704825,
          "stop" : 1722390715677,
          "duration" : 10852
        }
      }, {
        "uid" : "93f69f5c40caa03c",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/69//#testresult/93f69f5c40caa03c",
        "status" : "passed",
        "time" : {
          "start" : 1722305511338,
          "stop" : 1722305522180,
          "duration" : 10842
        }
      }, {
        "uid" : "1e360b2a2c7a3ffe",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/68//#testresult/1e360b2a2c7a3ffe",
        "status" : "passed",
        "time" : {
          "start" : 1722219243870,
          "stop" : 1722219254649,
          "duration" : 10779
        }
      }, {
        "uid" : "90b8e372d18d28ca",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/67//#testresult/90b8e372d18d28ca",
        "status" : "passed",
        "time" : {
          "start" : 1722132971337,
          "stop" : 1722132982157,
          "duration" : 10820
        }
      }, {
        "uid" : "3dc912c08f54e06a",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/66//#testresult/3dc912c08f54e06a",
        "status" : "passed",
        "time" : {
          "start" : 1722046150087,
          "stop" : 1722046160904,
          "duration" : 10817
        }
      }, {
        "uid" : "183b87755d356221",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/65//#testresult/183b87755d356221",
        "status" : "passed",
        "time" : {
          "start" : 1721959832215,
          "stop" : 1721959842976,
          "duration" : 10761
        }
      }, {
        "uid" : "15d0c0987958876d",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/64//#testresult/15d0c0987958876d",
        "status" : "passed",
        "time" : {
          "start" : 1721873513697,
          "stop" : 1721873524672,
          "duration" : 10975
        }
      }, {
        "uid" : "ab23fcc4af2d48ce",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/63//#testresult/ab23fcc4af2d48ce",
        "status" : "passed",
        "time" : {
          "start" : 1721787073317,
          "stop" : 1721787084153,
          "duration" : 10836
        }
      }, {
        "uid" : "dee49df9683469d2",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/62//#testresult/dee49df9683469d2",
        "status" : "passed",
        "time" : {
          "start" : 1721700726832,
          "stop" : 1721700737734,
          "duration" : 10902
        }
      } ]
    },
    "tags" : [ "smoke_test" ]
  },
  "source" : "2c9ca32d84688675.json",
  "parameterValues" : [ "'https://dealer-passport-test.xsfera.ru:3001/q/'" ]
}