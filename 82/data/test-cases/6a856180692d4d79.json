{
  "uid" : "6a856180692d4d79",
  "name" : "test_open_seo_prod[https://dealer-passport-test.xsfera.ru:3001/uploads/]",
  "fullName" : "tests.main_page_test.TestMainPageSmoke#test_open_seo_prod",
  "historyId" : "2262b75a9e3cf7125c82d9128597a2a7",
  "time" : {
    "start" : 1723428644778,
    "stop" : 1723428644778,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x562478ed971a <unknown>\n#1 0x562478baa481 <unknown>\n#2 0x562478c4ce51 <unknown>\n#3 0x562478c1c8e2 <unknown>\n#4 0x562478c3b08a <unknown>\n#5 0x562478c1c683 <unknown>\n#6 0x562478becd71 <unknown>\n#7 0x562478bed7de <unknown>\n#8 0x562478ea12ab <unknown>\n#9 0x562478ea5242 <unknown>\n#10 0x562478e8e665 <unknown>\n#11 0x562478ea5dd2 <unknown>\n#12 0x562478e732af <unknown>\n#13 0x562478ec8eb8 <unknown>\n#14 0x562478ec9090 <unknown>\n#15 0x562478ed84ec <unknown>\n#16 0x7f2fdcc94ac3 <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4108fd137001e447e2c8542510c3dea1\")>\n\n    @pytest.fixture\n    def auth_user_admin_to_seo_prod(driver):\n        main_page = MainPage(driver)\n        url = Urls.MAIN_URL_SEO_PROD + Urls.AUTH\n        cookies = {'name': 'token', 'value': os.environ[\"SEO_ADMIN\"]}\n        driver.get(url)\n>       driver.add_cookie(cookies)\n\ntests/conftest.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:636: in add_cookie\n    self.execute(Command.ADD_COOKIE, {\"cookie\": cookie_dict})\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f04e1d494c0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid cookie domain\",\"message\":\"invalid cookie domain\\\\n  (Session info...\\\\n#14 0x562478ec9090 \\\\u003Cunknown>\\\\n#15 0x562478ed84ec \\\\u003Cunknown>\\\\n#16 0x7f2fdcc94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\nE         (Session info: chrome-headless-shell=127.0.6533.88)\nE       Stacktrace:\nE       #0 0x562478ed971a <unknown>\nE       #1 0x562478baa481 <unknown>\nE       #2 0x562478c4ce51 <unknown>\nE       #3 0x562478c1c8e2 <unknown>\nE       #4 0x562478c3b08a <unknown>\nE       #5 0x562478c1c683 <unknown>\nE       #6 0x562478becd71 <unknown>\nE       #7 0x562478bed7de <unknown>\nE       #8 0x562478ea12ab <unknown>\nE       #9 0x562478ea5242 <unknown>\nE       #10 0x562478e8e665 <unknown>\nE       #11 0x562478ea5dd2 <unknown>\nE       #12 0x562478e732af <unknown>\nE       #13 0x562478ec8eb8 <unknown>\nE       #14 0x562478ec9090 <unknown>\nE       #15 0x562478ed84ec <unknown>\nE       #16 0x7f2fdcc94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidCookieDomainException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "auth_user_admin_to_seo_prod",
    "time" : {
      "start" : 1723428644979,
      "stop" : 1723428645311,
      "duration" : 332
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x562478ed971a <unknown>\n#1 0x562478baa481 <unknown>\n#2 0x562478c4ce51 <unknown>\n#3 0x562478c1c8e2 <unknown>\n#4 0x562478c3b08a <unknown>\n#5 0x562478c1c683 <unknown>\n#6 0x562478becd71 <unknown>\n#7 0x562478bed7de <unknown>\n#8 0x562478ea12ab <unknown>\n#9 0x562478ea5242 <unknown>\n#10 0x562478e8e665 <unknown>\n#11 0x562478ea5dd2 <unknown>\n#12 0x562478e732af <unknown>\n#13 0x562478ec8eb8 <unknown>\n#14 0x562478ec9090 <unknown>\n#15 0x562478ed84ec <unknown>\n#16 0x7f2fdcc94ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 917, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/DealerPassport/DealerPassport/tests/conftest.py\", line 28, in auth_user_admin_to_seo_prod\n    driver.add_cookie(cookies)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 636, in add_cookie\n    self.execute(Command.ADD_COOKIE, {\"cookie\": cookie_dict})\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1723428577028,
      "stop" : 1723428577028,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1723428644778,
      "stop" : 1723428644978,
      "duration" : 200
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1723428645342,
      "stop" : 1723428645401,
      "duration" : 59
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Main Page smoke_test"
  }, {
    "name" : "tag",
    "value" : "smoke_test"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "main_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestMainPageSmoke"
  }, {
    "name" : "host",
    "value" : "fv-az1501-607"
  }, {
    "name" : "thread",
    "value" : "2340-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.main_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'https://dealer-passport-test.xsfera.ru:3001/uploads/'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 77,
        "unknown" : 0,
        "total" : 80
      },
      "items" : [ {
        "uid" : "3edb1c6f56905f7b",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/81//#testresult/3edb1c6f56905f7b",
        "status" : "passed",
        "time" : {
          "start" : 1723342819416,
          "stop" : 1723342830306,
          "duration" : 10890
        }
      }, {
        "uid" : "1a84154a4887dcf0",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/80//#testresult/1a84154a4887dcf0",
        "status" : "passed",
        "time" : {
          "start" : 1723256092216,
          "stop" : 1723256103164,
          "duration" : 10948
        }
      }, {
        "uid" : "12c1419a28626e3f",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/79//#testresult/12c1419a28626e3f",
        "status" : "passed",
        "time" : {
          "start" : 1723169726371,
          "stop" : 1723169737173,
          "duration" : 10802
        }
      }, {
        "uid" : "c3ddea09887323ca",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/78//#testresult/c3ddea09887323ca",
        "status" : "passed",
        "time" : {
          "start" : 1723083299092,
          "stop" : 1723083310006,
          "duration" : 10914
        }
      }, {
        "uid" : "1df5cbe084cf114a",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/77//#testresult/1df5cbe084cf114a",
        "status" : "passed",
        "time" : {
          "start" : 1722996910490,
          "stop" : 1722996921364,
          "duration" : 10874
        }
      }, {
        "uid" : "3449821dbcdc315",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/76//#testresult/3449821dbcdc315",
        "status" : "passed",
        "time" : {
          "start" : 1722910389565,
          "stop" : 1722910400377,
          "duration" : 10812
        }
      }, {
        "uid" : "77e370be6a5cacf9",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/75//#testresult/77e370be6a5cacf9",
        "status" : "passed",
        "time" : {
          "start" : 1722824132826,
          "stop" : 1722824143697,
          "duration" : 10871
        }
      }, {
        "uid" : "7892a40f723e7836",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/74//#testresult/7892a40f723e7836",
        "status" : "passed",
        "time" : {
          "start" : 1722737859563,
          "stop" : 1722737870418,
          "duration" : 10855
        }
      }, {
        "uid" : "4b81ba7cfce9ecdc",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/73//#testresult/4b81ba7cfce9ecdc",
        "status" : "passed",
        "time" : {
          "start" : 1722651050683,
          "stop" : 1722651061484,
          "duration" : 10801
        }
      }, {
        "uid" : "48a3358ae83e09b7",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/72//#testresult/48a3358ae83e09b7",
        "status" : "passed",
        "time" : {
          "start" : 1722564979057,
          "stop" : 1722564989910,
          "duration" : 10853
        }
      }, {
        "uid" : "ef4c767adf223dde",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/71//#testresult/ef4c767adf223dde",
        "status" : "passed",
        "time" : {
          "start" : 1722478818730,
          "stop" : 1722478829654,
          "duration" : 10924
        }
      }, {
        "uid" : "934eb98fb71502e2",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/70//#testresult/934eb98fb71502e2",
        "status" : "passed",
        "time" : {
          "start" : 1722390777316,
          "stop" : 1722390788226,
          "duration" : 10910
        }
      }, {
        "uid" : "68bf6e4a6bf619fc",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/69//#testresult/68bf6e4a6bf619fc",
        "status" : "passed",
        "time" : {
          "start" : 1722305584126,
          "stop" : 1722305594987,
          "duration" : 10861
        }
      }, {
        "uid" : "da8078a190d86d6f",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/68//#testresult/da8078a190d86d6f",
        "status" : "passed",
        "time" : {
          "start" : 1722219312311,
          "stop" : 1722219323123,
          "duration" : 10812
        }
      }, {
        "uid" : "88d8a37af2a998ac",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/67//#testresult/88d8a37af2a998ac",
        "status" : "passed",
        "time" : {
          "start" : 1722133041624,
          "stop" : 1722133052470,
          "duration" : 10846
        }
      }, {
        "uid" : "1b9e4f2c6dae62c8",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/66//#testresult/1b9e4f2c6dae62c8",
        "status" : "passed",
        "time" : {
          "start" : 1722046219069,
          "stop" : 1722046229869,
          "duration" : 10800
        }
      }, {
        "uid" : "be80733df94b435e",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/65//#testresult/be80733df94b435e",
        "status" : "passed",
        "time" : {
          "start" : 1721959900301,
          "stop" : 1721959911130,
          "duration" : 10829
        }
      }, {
        "uid" : "a2d4c0257c584348",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/64//#testresult/a2d4c0257c584348",
        "status" : "passed",
        "time" : {
          "start" : 1721873587777,
          "stop" : 1721873598739,
          "duration" : 10962
        }
      }, {
        "uid" : "3ef729256f08d197",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/63//#testresult/3ef729256f08d197",
        "status" : "passed",
        "time" : {
          "start" : 1721787142999,
          "stop" : 1721787153908,
          "duration" : 10909
        }
      }, {
        "uid" : "3f3dd1b4d875959b",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/62//#testresult/3f3dd1b4d875959b",
        "status" : "passed",
        "time" : {
          "start" : 1721700800409,
          "stop" : 1721700811273,
          "duration" : 10864
        }
      } ]
    },
    "tags" : [ "smoke_test" ]
  },
  "source" : "6a856180692d4d79.json",
  "parameterValues" : [ "'https://dealer-passport-test.xsfera.ru:3001/uploads/'" ]
}