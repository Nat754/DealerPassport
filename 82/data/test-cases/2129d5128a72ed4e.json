{
  "uid" : "2129d5128a72ed4e",
  "name" : "test_open_seo_prod[https://dealer-passport-test.xsfera.ru:3001/users/]",
  "fullName" : "tests.main_page_test.TestMainPageSmoke#test_open_seo_prod",
  "historyId" : "198218dbfaee8beb3d9c9e4f9ab70b7a",
  "time" : {
    "start" : 1723428643533,
    "stop" : 1723428643533,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x55881d90371a <unknown>\n#1 0x55881d5d4481 <unknown>\n#2 0x55881d676e51 <unknown>\n#3 0x55881d6468e2 <unknown>\n#4 0x55881d66508a <unknown>\n#5 0x55881d646683 <unknown>\n#6 0x55881d616d71 <unknown>\n#7 0x55881d6177de <unknown>\n#8 0x55881d8cb2ab <unknown>\n#9 0x55881d8cf242 <unknown>\n#10 0x55881d8b8665 <unknown>\n#11 0x55881d8cfdd2 <unknown>\n#12 0x55881d89d2af <unknown>\n#13 0x55881d8f2eb8 <unknown>\n#14 0x55881d8f3090 <unknown>\n#15 0x55881d9024ec <unknown>\n#16 0x7f9a36694ac3 <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"87a2a0e54a42c9104c3722a1dfd62be2\")>\n\n    @pytest.fixture\n    def auth_user_admin_to_seo_prod(driver):\n        main_page = MainPage(driver)\n        url = Urls.MAIN_URL_SEO_PROD + Urls.AUTH\n        cookies = {'name': 'token', 'value': os.environ[\"SEO_ADMIN\"]}\n        driver.get(url)\n>       driver.add_cookie(cookies)\n\ntests/conftest.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:636: in add_cookie\n    self.execute(Command.ADD_COOKIE, {\"cookie\": cookie_dict})\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f04e1ad37d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid cookie domain\",\"message\":\"invalid cookie domain\\\\n  (Session info...\\\\n#14 0x55881d8f3090 \\\\u003Cunknown>\\\\n#15 0x55881d9024ec \\\\u003Cunknown>\\\\n#16 0x7f9a36694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\nE         (Session info: chrome-headless-shell=127.0.6533.88)\nE       Stacktrace:\nE       #0 0x55881d90371a <unknown>\nE       #1 0x55881d5d4481 <unknown>\nE       #2 0x55881d676e51 <unknown>\nE       #3 0x55881d6468e2 <unknown>\nE       #4 0x55881d66508a <unknown>\nE       #5 0x55881d646683 <unknown>\nE       #6 0x55881d616d71 <unknown>\nE       #7 0x55881d6177de <unknown>\nE       #8 0x55881d8cb2ab <unknown>\nE       #9 0x55881d8cf242 <unknown>\nE       #10 0x55881d8b8665 <unknown>\nE       #11 0x55881d8cfdd2 <unknown>\nE       #12 0x55881d89d2af <unknown>\nE       #13 0x55881d8f2eb8 <unknown>\nE       #14 0x55881d8f3090 <unknown>\nE       #15 0x55881d9024ec <unknown>\nE       #16 0x7f9a36694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidCookieDomainException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "auth_user_admin_to_seo_prod",
    "time" : {
      "start" : 1723428643734,
      "stop" : 1723428644067,
      "duration" : 333
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x55881d90371a <unknown>\n#1 0x55881d5d4481 <unknown>\n#2 0x55881d676e51 <unknown>\n#3 0x55881d6468e2 <unknown>\n#4 0x55881d66508a <unknown>\n#5 0x55881d646683 <unknown>\n#6 0x55881d616d71 <unknown>\n#7 0x55881d6177de <unknown>\n#8 0x55881d8cb2ab <unknown>\n#9 0x55881d8cf242 <unknown>\n#10 0x55881d8b8665 <unknown>\n#11 0x55881d8cfdd2 <unknown>\n#12 0x55881d89d2af <unknown>\n#13 0x55881d8f2eb8 <unknown>\n#14 0x55881d8f3090 <unknown>\n#15 0x55881d9024ec <unknown>\n#16 0x7f9a36694ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 917, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/DealerPassport/DealerPassport/tests/conftest.py\", line 28, in auth_user_admin_to_seo_prod\n    driver.add_cookie(cookies)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 636, in add_cookie\n    self.execute(Command.ADD_COOKIE, {\"cookie\": cookie_dict})\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1723428643534,
      "stop" : 1723428643733,
      "duration" : 199
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1723428577028,
      "stop" : 1723428577028,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1723428644097,
      "stop" : 1723428644156,
      "duration" : 59
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Main Page smoke_test"
  }, {
    "name" : "tag",
    "value" : "smoke_test"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "main_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestMainPageSmoke"
  }, {
    "name" : "host",
    "value" : "fv-az1501-607"
  }, {
    "name" : "thread",
    "value" : "2340-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.main_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'https://dealer-passport-test.xsfera.ru:3001/users/'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 4,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 73,
        "unknown" : 0,
        "total" : 80
      },
      "items" : [ {
        "uid" : "36aee84953a50d7d",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/81//#testresult/36aee84953a50d7d",
        "status" : "passed",
        "time" : {
          "start" : 1723342789517,
          "stop" : 1723342800536,
          "duration" : 11019
        }
      }, {
        "uid" : "e682025a5e88543f",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/80//#testresult/e682025a5e88543f",
        "status" : "passed",
        "time" : {
          "start" : 1723256061940,
          "stop" : 1723256072968,
          "duration" : 11028
        }
      }, {
        "uid" : "84f734ae05890fdb",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/79//#testresult/84f734ae05890fdb",
        "status" : "passed",
        "time" : {
          "start" : 1723169698901,
          "stop" : 1723169709807,
          "duration" : 10906
        }
      }, {
        "uid" : "53d2d38fdfdf5a83",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/78//#testresult/53d2d38fdfdf5a83",
        "status" : "passed",
        "time" : {
          "start" : 1723083267248,
          "stop" : 1723083278256,
          "duration" : 11008
        }
      }, {
        "uid" : "fc1744d671c12115",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/77//#testresult/fc1744d671c12115",
        "status" : "passed",
        "time" : {
          "start" : 1722996882992,
          "stop" : 1722996893879,
          "duration" : 10887
        }
      }, {
        "uid" : "4c34263a4f32a93d",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/76//#testresult/4c34263a4f32a93d",
        "status" : "passed",
        "time" : {
          "start" : 1722910361387,
          "stop" : 1722910372182,
          "duration" : 10795
        }
      }, {
        "uid" : "17ec060dbd38524d",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/75//#testresult/17ec060dbd38524d",
        "status" : "passed",
        "time" : {
          "start" : 1722824103655,
          "stop" : 1722824114530,
          "duration" : 10875
        }
      }, {
        "uid" : "192130cda450cfd5",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/74//#testresult/192130cda450cfd5",
        "status" : "passed",
        "time" : {
          "start" : 1722737831493,
          "stop" : 1722737842330,
          "duration" : 10837
        }
      }, {
        "uid" : "a9792597db8d93d5",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/73//#testresult/a9792597db8d93d5",
        "status" : "passed",
        "time" : {
          "start" : 1722651023249,
          "stop" : 1722651034021,
          "duration" : 10772
        }
      }, {
        "uid" : "44c650f24cc93089",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/72//#testresult/44c650f24cc93089",
        "status" : "passed",
        "time" : {
          "start" : 1722564951841,
          "stop" : 1722564962705,
          "duration" : 10864
        }
      }, {
        "uid" : "a7a3dd422b22ca9d",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/71//#testresult/a7a3dd422b22ca9d",
        "status" : "passed",
        "time" : {
          "start" : 1722478789031,
          "stop" : 1722478800002,
          "duration" : 10971
        }
      }, {
        "uid" : "ba29698a4a161c60",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/70//#testresult/ba29698a4a161c60",
        "status" : "passed",
        "time" : {
          "start" : 1722390748304,
          "stop" : 1722390759208,
          "duration" : 10904
        }
      }, {
        "uid" : "74c0080da68f397f",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/69//#testresult/74c0080da68f397f",
        "status" : "passed",
        "time" : {
          "start" : 1722305554989,
          "stop" : 1722305565911,
          "duration" : 10922
        }
      }, {
        "uid" : "150a5bf34a4f5936",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/68//#testresult/150a5bf34a4f5936",
        "status" : "passed",
        "time" : {
          "start" : 1722219284820,
          "stop" : 1722219295694,
          "duration" : 10874
        }
      }, {
        "uid" : "91d3b2762d65d69d",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/67//#testresult/91d3b2762d65d69d",
        "status" : "passed",
        "time" : {
          "start" : 1722133013356,
          "stop" : 1722133024211,
          "duration" : 10855
        }
      }, {
        "uid" : "292067e0f2085203",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/66//#testresult/292067e0f2085203",
        "status" : "passed",
        "time" : {
          "start" : 1722046191157,
          "stop" : 1722046201945,
          "duration" : 10788
        }
      }, {
        "uid" : "7aa475c088c1e9ea",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/65//#testresult/7aa475c088c1e9ea",
        "status" : "passed",
        "time" : {
          "start" : 1721959872981,
          "stop" : 1721959883837,
          "duration" : 10856
        }
      }, {
        "uid" : "28c9228656c06dc1",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/64//#testresult/28c9228656c06dc1",
        "status" : "passed",
        "time" : {
          "start" : 1721873558085,
          "stop" : 1721873569056,
          "duration" : 10971
        }
      }, {
        "uid" : "e42b059f5f59fed1",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/63//#testresult/e42b059f5f59fed1",
        "status" : "passed",
        "time" : {
          "start" : 1721787115239,
          "stop" : 1721787126055,
          "duration" : 10816
        }
      }, {
        "uid" : "741e7ae99d0f930b",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/62//#testresult/741e7ae99d0f930b",
        "status" : "passed",
        "time" : {
          "start" : 1721700771047,
          "stop" : 1721700781992,
          "duration" : 10945
        }
      } ]
    },
    "tags" : [ "smoke_test" ]
  },
  "source" : "2129d5128a72ed4e.json",
  "parameterValues" : [ "'https://dealer-passport-test.xsfera.ru:3001/users/'" ]
}