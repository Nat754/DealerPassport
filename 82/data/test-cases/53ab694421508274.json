{
  "uid" : "53ab694421508274",
  "name" : "test_open_seo[https://dealer-passport-test.xsfera.ru/uploads/]",
  "fullName" : "tests.main_page_test.TestMainPageSmoke#test_open_seo",
  "historyId" : "c82ac21e676b251a3734f141e0f54623",
  "time" : {
    "start" : 1723428635411,
    "stop" : 1723428635411,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x556ef1f4471a <unknown>\n#1 0x556ef1c15481 <unknown>\n#2 0x556ef1cb7e51 <unknown>\n#3 0x556ef1c878e2 <unknown>\n#4 0x556ef1ca608a <unknown>\n#5 0x556ef1c87683 <unknown>\n#6 0x556ef1c57d71 <unknown>\n#7 0x556ef1c587de <unknown>\n#8 0x556ef1f0c2ab <unknown>\n#9 0x556ef1f10242 <unknown>\n#10 0x556ef1ef9665 <unknown>\n#11 0x556ef1f10dd2 <unknown>\n#12 0x556ef1ede2af <unknown>\n#13 0x556ef1f33eb8 <unknown>\n#14 0x556ef1f34090 <unknown>\n#15 0x556ef1f434ec <unknown>\n#16 0x7f8b65094ac3 <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"16faf185ec195ee71cb107041fe0c194\")>\n\n    @pytest.fixture\n    def auth_user_admin_to_seo(driver):\n        main_page = MainPage(driver)\n        url = Urls.MAIN_URL_SEO + Urls.AUTH\n        cookies = {'name': 'token', 'value': os.environ[\"SEO_ADMIN\"]}\n        driver.get(url)\n>       driver.add_cookie(cookies)\n\ntests/conftest.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:636: in add_cookie\n    self.execute(Command.ADD_COOKIE, {\"cookie\": cookie_dict})\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f04e1bb4a40>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid cookie domain\",\"message\":\"invalid cookie domain\\\\n  (Session info...\\\\n#14 0x556ef1f34090 \\\\u003Cunknown>\\\\n#15 0x556ef1f434ec \\\\u003Cunknown>\\\\n#16 0x7f8b65094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\nE         (Session info: chrome-headless-shell=127.0.6533.88)\nE       Stacktrace:\nE       #0 0x556ef1f4471a <unknown>\nE       #1 0x556ef1c15481 <unknown>\nE       #2 0x556ef1cb7e51 <unknown>\nE       #3 0x556ef1c878e2 <unknown>\nE       #4 0x556ef1ca608a <unknown>\nE       #5 0x556ef1c87683 <unknown>\nE       #6 0x556ef1c57d71 <unknown>\nE       #7 0x556ef1c587de <unknown>\nE       #8 0x556ef1f0c2ab <unknown>\nE       #9 0x556ef1f10242 <unknown>\nE       #10 0x556ef1ef9665 <unknown>\nE       #11 0x556ef1f10dd2 <unknown>\nE       #12 0x556ef1ede2af <unknown>\nE       #13 0x556ef1f33eb8 <unknown>\nE       #14 0x556ef1f34090 <unknown>\nE       #15 0x556ef1f434ec <unknown>\nE       #16 0x7f8b65094ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidCookieDomainException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1723428635412,
      "stop" : 1723428635615,
      "duration" : 203
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_user_admin_to_seo",
    "time" : {
      "start" : 1723428635615,
      "stop" : 1723428635944,
      "duration" : 329
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x556ef1f4471a <unknown>\n#1 0x556ef1c15481 <unknown>\n#2 0x556ef1cb7e51 <unknown>\n#3 0x556ef1c878e2 <unknown>\n#4 0x556ef1ca608a <unknown>\n#5 0x556ef1c87683 <unknown>\n#6 0x556ef1c57d71 <unknown>\n#7 0x556ef1c587de <unknown>\n#8 0x556ef1f0c2ab <unknown>\n#9 0x556ef1f10242 <unknown>\n#10 0x556ef1ef9665 <unknown>\n#11 0x556ef1f10dd2 <unknown>\n#12 0x556ef1ede2af <unknown>\n#13 0x556ef1f33eb8 <unknown>\n#14 0x556ef1f34090 <unknown>\n#15 0x556ef1f434ec <unknown>\n#16 0x7f8b65094ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 917, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/DealerPassport/DealerPassport/tests/conftest.py\", line 16, in auth_user_admin_to_seo\n    driver.add_cookie(cookies)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 636, in add_cookie\n    self.execute(Command.ADD_COOKIE, {\"cookie\": cookie_dict})\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1723428577028,
      "stop" : 1723428577028,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1723428635974,
      "stop" : 1723428636033,
      "duration" : 59
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Main Page smoke_test"
  }, {
    "name" : "tag",
    "value" : "smoke_test"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "main_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestMainPageSmoke"
  }, {
    "name" : "host",
    "value" : "fv-az1501-607"
  }, {
    "name" : "thread",
    "value" : "2340-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.main_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'https://dealer-passport-test.xsfera.ru/uploads/'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 10,
        "skipped" : 0,
        "passed" : 70,
        "unknown" : 0,
        "total" : 80
      },
      "items" : [ {
        "uid" : "9b2efef78e51efa9",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/81//#testresult/9b2efef78e51efa9",
        "status" : "passed",
        "time" : {
          "start" : 1723342594640,
          "stop" : 1723342605614,
          "duration" : 10974
        }
      }, {
        "uid" : "77f0514d4796734e",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/80//#testresult/77f0514d4796734e",
        "status" : "passed",
        "time" : {
          "start" : 1723255867831,
          "stop" : 1723255878793,
          "duration" : 10962
        }
      }, {
        "uid" : "f9c2411bfcdcfed5",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/79//#testresult/f9c2411bfcdcfed5",
        "status" : "passed",
        "time" : {
          "start" : 1723169520898,
          "stop" : 1723169531791,
          "duration" : 10893
        }
      }, {
        "uid" : "57987faf71fdca9d",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/78//#testresult/57987faf71fdca9d",
        "status" : "passed",
        "time" : {
          "start" : 1723083072740,
          "stop" : 1723083083731,
          "duration" : 10991
        }
      }, {
        "uid" : "a54dc6a5c57edb7e",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/77//#testresult/a54dc6a5c57edb7e",
        "status" : "passed",
        "time" : {
          "start" : 1722996705312,
          "stop" : 1722996716131,
          "duration" : 10819
        }
      }, {
        "uid" : "e61b523ce63f0533",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/76//#testresult/e61b523ce63f0533",
        "status" : "passed",
        "time" : {
          "start" : 1722910180045,
          "stop" : 1722910190934,
          "duration" : 10889
        }
      }, {
        "uid" : "563dc6b49885f60",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/75//#testresult/563dc6b49885f60",
        "status" : "passed",
        "time" : {
          "start" : 1722823913028,
          "stop" : 1722823923907,
          "duration" : 10879
        }
      }, {
        "uid" : "d2374290b573acb0",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/74//#testresult/d2374290b573acb0",
        "status" : "passed",
        "time" : {
          "start" : 1722737649498,
          "stop" : 1722737660338,
          "duration" : 10840
        }
      }, {
        "uid" : "ae8d99bba5e9ff79",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/73//#testresult/ae8d99bba5e9ff79",
        "status" : "passed",
        "time" : {
          "start" : 1722650845286,
          "stop" : 1722650856069,
          "duration" : 10783
        }
      }, {
        "uid" : "8d1a8bb882f4dddc",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/72//#testresult/8d1a8bb882f4dddc",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x56328e41ec5a <unknown>\n#1 0x56328e101e2c <unknown>\n#2 0x56328e14e661 <unknown>\n#3 0x56328e14e751 <unknown>\n#4 0x56328e192f64 <unknown>\n#5 0x56328e1715ed <unknown>\n#6 0x56328e190303 <unknown>\n#7 0x56328e171363 <unknown>\n#8 0x56328e141247 <unknown>\n#9 0x56328e141b9e <unknown>\n#10 0x56328e3e522b <unknown>\n#11 0x56328e3e92d1 <unknown>\n#12 0x56328e3d0ade <unknown>\n#13 0x56328e3e9e32 <unknown>\n#14 0x56328e3b577f <unknown>\n#15 0x56328e40e618 <unknown>\n#16 0x56328e40e7f0 <unknown>\n#17 0x56328e41dd8c <unknown>\n#18 0x7f84c0a94ac3 <unknown>",
        "time" : {
          "start" : 1722564772625,
          "stop" : 1722564772625,
          "duration" : 0
        }
      }, {
        "uid" : "1130f64c810d81cb",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/71//#testresult/1130f64c810d81cb",
        "status" : "passed",
        "time" : {
          "start" : 1722478595015,
          "stop" : 1722478605964,
          "duration" : 10949
        }
      }, {
        "uid" : "f0a6160b879af656",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/70//#testresult/f0a6160b879af656",
        "status" : "passed",
        "time" : {
          "start" : 1722390559246,
          "stop" : 1722390570164,
          "duration" : 10918
        }
      }, {
        "uid" : "75727c2e8ad5bd96",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/69//#testresult/75727c2e8ad5bd96",
        "status" : "passed",
        "time" : {
          "start" : 1722305364688,
          "stop" : 1722305375615,
          "duration" : 10927
        }
      }, {
        "uid" : "bc803320ba11d2bb",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/68//#testresult/bc803320ba11d2bb",
        "status" : "passed",
        "time" : {
          "start" : 1722219107613,
          "stop" : 1722219118415,
          "duration" : 10802
        }
      }, {
        "uid" : "e5f9d0545b423626",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/67//#testresult/e5f9d0545b423626",
        "status" : "passed",
        "time" : {
          "start" : 1722132831448,
          "stop" : 1722132842330,
          "duration" : 10882
        }
      }, {
        "uid" : "2480eac3d8b18489",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/66//#testresult/2480eac3d8b18489",
        "status" : "passed",
        "time" : {
          "start" : 1722046013076,
          "stop" : 1722046023899,
          "duration" : 10823
        }
      }, {
        "uid" : "5a18cb69e6b80cd1",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/65//#testresult/5a18cb69e6b80cd1",
        "status" : "passed",
        "time" : {
          "start" : 1721959694183,
          "stop" : 1721959704951,
          "duration" : 10768
        }
      }, {
        "uid" : "f26f3bc48f274a2b",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/64//#testresult/f26f3bc48f274a2b",
        "status" : "passed",
        "time" : {
          "start" : 1721873365969,
          "stop" : 1721873376950,
          "duration" : 10981
        }
      }, {
        "uid" : "5e347a3f3b56ab69",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/63//#testresult/5e347a3f3b56ab69",
        "status" : "passed",
        "time" : {
          "start" : 1721786933467,
          "stop" : 1721786944378,
          "duration" : 10911
        }
      }, {
        "uid" : "f4d89de7c80c6bc4",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/62//#testresult/f4d89de7c80c6bc4",
        "status" : "passed",
        "time" : {
          "start" : 1721700581213,
          "stop" : 1721700592143,
          "duration" : 10930
        }
      } ]
    },
    "tags" : [ "smoke_test" ]
  },
  "source" : "53ab694421508274.json",
  "parameterValues" : [ "'https://dealer-passport-test.xsfera.ru/uploads/'" ]
}