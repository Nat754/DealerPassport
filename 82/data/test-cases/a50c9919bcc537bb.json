{
  "uid" : "a50c9919bcc537bb",
  "name" : "test_open_seo_prod[https://dealer-passport-test.xsfera.ru:3001]",
  "fullName" : "tests.main_page_test.TestMainPageSmoke#test_open_seo_prod",
  "historyId" : "a1cf1ba8b81c0f0ee1e5be7ee0e3900f",
  "time" : {
    "start" : 1723428636034,
    "stop" : 1723428636034,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x5585649df71a <unknown>\n#1 0x5585646b0481 <unknown>\n#2 0x558564752e51 <unknown>\n#3 0x5585647228e2 <unknown>\n#4 0x55856474108a <unknown>\n#5 0x558564722683 <unknown>\n#6 0x5585646f2d71 <unknown>\n#7 0x5585646f37de <unknown>\n#8 0x5585649a72ab <unknown>\n#9 0x5585649ab242 <unknown>\n#10 0x558564994665 <unknown>\n#11 0x5585649abdd2 <unknown>\n#12 0x5585649792af <unknown>\n#13 0x5585649ceeb8 <unknown>\n#14 0x5585649cf090 <unknown>\n#15 0x5585649de4ec <unknown>\n#16 0x7f4495c94ac3 <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"934c96ebf49fc231397c884f71308fe1\")>\n\n    @pytest.fixture\n    def auth_user_admin_to_seo_prod(driver):\n        main_page = MainPage(driver)\n        url = Urls.MAIN_URL_SEO_PROD + Urls.AUTH\n        cookies = {'name': 'token', 'value': os.environ[\"SEO_ADMIN\"]}\n        driver.get(url)\n>       driver.add_cookie(cookies)\n\ntests/conftest.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:636: in add_cookie\n    self.execute(Command.ADD_COOKIE, {\"cookie\": cookie_dict})\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f04e1adc260>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid cookie domain\",\"message\":\"invalid cookie domain\\\\n  (Session info...\\\\n#14 0x5585649cf090 \\\\u003Cunknown>\\\\n#15 0x5585649de4ec \\\\u003Cunknown>\\\\n#16 0x7f4495c94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\nE         (Session info: chrome-headless-shell=127.0.6533.88)\nE       Stacktrace:\nE       #0 0x5585649df71a <unknown>\nE       #1 0x5585646b0481 <unknown>\nE       #2 0x558564752e51 <unknown>\nE       #3 0x5585647228e2 <unknown>\nE       #4 0x55856474108a <unknown>\nE       #5 0x558564722683 <unknown>\nE       #6 0x5585646f2d71 <unknown>\nE       #7 0x5585646f37de <unknown>\nE       #8 0x5585649a72ab <unknown>\nE       #9 0x5585649ab242 <unknown>\nE       #10 0x558564994665 <unknown>\nE       #11 0x5585649abdd2 <unknown>\nE       #12 0x5585649792af <unknown>\nE       #13 0x5585649ceeb8 <unknown>\nE       #14 0x5585649cf090 <unknown>\nE       #15 0x5585649de4ec <unknown>\nE       #16 0x7f4495c94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidCookieDomainException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "auth_user_admin_to_seo_prod",
    "time" : {
      "start" : 1723428636234,
      "stop" : 1723428636575,
      "duration" : 341
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x5585649df71a <unknown>\n#1 0x5585646b0481 <unknown>\n#2 0x558564752e51 <unknown>\n#3 0x5585647228e2 <unknown>\n#4 0x55856474108a <unknown>\n#5 0x558564722683 <unknown>\n#6 0x5585646f2d71 <unknown>\n#7 0x5585646f37de <unknown>\n#8 0x5585649a72ab <unknown>\n#9 0x5585649ab242 <unknown>\n#10 0x558564994665 <unknown>\n#11 0x5585649abdd2 <unknown>\n#12 0x5585649792af <unknown>\n#13 0x5585649ceeb8 <unknown>\n#14 0x5585649cf090 <unknown>\n#15 0x5585649de4ec <unknown>\n#16 0x7f4495c94ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 917, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/DealerPassport/DealerPassport/tests/conftest.py\", line 28, in auth_user_admin_to_seo_prod\n    driver.add_cookie(cookies)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 636, in add_cookie\n    self.execute(Command.ADD_COOKIE, {\"cookie\": cookie_dict})\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1723428636035,
      "stop" : 1723428636234,
      "duration" : 199
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1723428577028,
      "stop" : 1723428577028,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1723428636605,
      "stop" : 1723428636664,
      "duration" : 59
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Main Page smoke_test"
  }, {
    "name" : "tag",
    "value" : "smoke_test"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "main_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestMainPageSmoke"
  }, {
    "name" : "host",
    "value" : "fv-az1501-607"
  }, {
    "name" : "thread",
    "value" : "2340-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.main_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'https://dealer-passport-test.xsfera.ru:3001'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 76,
        "unknown" : 0,
        "total" : 80
      },
      "items" : [ {
        "uid" : "b34060ec99d3cfc",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/81//#testresult/b34060ec99d3cfc",
        "status" : "passed",
        "time" : {
          "start" : 1723342609850,
          "stop" : 1723342620310,
          "duration" : 10460
        }
      }, {
        "uid" : "57a26928a4a41272",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/80//#testresult/57a26928a4a41272",
        "status" : "passed",
        "time" : {
          "start" : 1723255882896,
          "stop" : 1723255893398,
          "duration" : 10502
        }
      }, {
        "uid" : "e42704af29753feb",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/79//#testresult/e42704af29753feb",
        "status" : "passed",
        "time" : {
          "start" : 1723169534665,
          "stop" : 1723169545140,
          "duration" : 10475
        }
      }, {
        "uid" : "d672b676a9559886",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/78//#testresult/d672b676a9559886",
        "status" : "passed",
        "time" : {
          "start" : 1723083087875,
          "stop" : 1723083098369,
          "duration" : 10494
        }
      }, {
        "uid" : "2547a9f4d78f88e9",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/77//#testresult/2547a9f4d78f88e9",
        "status" : "passed",
        "time" : {
          "start" : 1722996718945,
          "stop" : 1722996729429,
          "duration" : 10484
        }
      }, {
        "uid" : "f7db4b622f2a200a",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/76//#testresult/f7db4b622f2a200a",
        "status" : "passed",
        "time" : {
          "start" : 1722910194178,
          "stop" : 1722910204652,
          "duration" : 10474
        }
      }, {
        "uid" : "dc852f3004238389",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/75//#testresult/dc852f3004238389",
        "status" : "passed",
        "time" : {
          "start" : 1722823927762,
          "stop" : 1722823938227,
          "duration" : 10465
        }
      }, {
        "uid" : "79aa706afdd1beb4",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/74//#testresult/79aa706afdd1beb4",
        "status" : "passed",
        "time" : {
          "start" : 1722737663685,
          "stop" : 1722737674152,
          "duration" : 10467
        }
      }, {
        "uid" : "ab2c16135f0df404",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/73//#testresult/ab2c16135f0df404",
        "status" : "passed",
        "time" : {
          "start" : 1722650858927,
          "stop" : 1722650869419,
          "duration" : 10492
        }
      }, {
        "uid" : "1fca067ea3cfeb3c",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/72//#testresult/1fca067ea3cfeb3c",
        "status" : "passed",
        "time" : {
          "start" : 1722564788231,
          "stop" : 1722564798728,
          "duration" : 10497
        }
      }, {
        "uid" : "2b012db2af82b9d3",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/71//#testresult/2b012db2af82b9d3",
        "status" : "passed",
        "time" : {
          "start" : 1722478609864,
          "stop" : 1722478620350,
          "duration" : 10486
        }
      }, {
        "uid" : "bc7926e6417f681f",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/70//#testresult/bc7926e6417f681f",
        "status" : "passed",
        "time" : {
          "start" : 1722390573736,
          "stop" : 1722390584237,
          "duration" : 10501
        }
      }, {
        "uid" : "da43b0a453f93c99",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/69//#testresult/da43b0a453f93c99",
        "status" : "passed",
        "time" : {
          "start" : 1722305379351,
          "stop" : 1722305389875,
          "duration" : 10524
        }
      }, {
        "uid" : "a0aabcd25119695b",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/68//#testresult/a0aabcd25119695b",
        "status" : "passed",
        "time" : {
          "start" : 1722219121191,
          "stop" : 1722219131664,
          "duration" : 10473
        }
      }, {
        "uid" : "727d0f8b9007a6a8",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/67//#testresult/727d0f8b9007a6a8",
        "status" : "passed",
        "time" : {
          "start" : 1722132845604,
          "stop" : 1722132856102,
          "duration" : 10498
        }
      }, {
        "uid" : "bc3dc33f5d21e842",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/66//#testresult/bc3dc33f5d21e842",
        "status" : "passed",
        "time" : {
          "start" : 1722046026893,
          "stop" : 1722046037373,
          "duration" : 10480
        }
      }, {
        "uid" : "33aad33be96914d",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/65//#testresult/33aad33be96914d",
        "status" : "passed",
        "time" : {
          "start" : 1721959707900,
          "stop" : 1721959718389,
          "duration" : 10489
        }
      }, {
        "uid" : "2c995c1cde9996c4",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/64//#testresult/2c995c1cde9996c4",
        "status" : "passed",
        "time" : {
          "start" : 1721873380788,
          "stop" : 1721873391284,
          "duration" : 10496
        }
      }, {
        "uid" : "a89af07eae8c4622",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/63//#testresult/a89af07eae8c4622",
        "status" : "passed",
        "time" : {
          "start" : 1721786947469,
          "stop" : 1721786957959,
          "duration" : 10490
        }
      }, {
        "uid" : "70acaa8c3015f1d9",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/62//#testresult/70acaa8c3015f1d9",
        "status" : "passed",
        "time" : {
          "start" : 1721700595769,
          "stop" : 1721700606267,
          "duration" : 10498
        }
      } ]
    },
    "tags" : [ "smoke_test" ]
  },
  "source" : "a50c9919bcc537bb.json",
  "parameterValues" : [ "'https://dealer-passport-test.xsfera.ru:3001'" ]
}