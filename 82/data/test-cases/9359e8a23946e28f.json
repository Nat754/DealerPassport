{
  "uid" : "9359e8a23946e28f",
  "name" : "test_open_seo_prod[https://dealer-passport-test.xsfera.ru:3001/documents/]",
  "fullName" : "tests.main_page_test.TestMainPageSmoke#test_open_seo_prod",
  "historyId" : "2c77f94fd87889841ec498f230a37318",
  "time" : {
    "start" : 1723428639794,
    "stop" : 1723428639794,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x55908d4d271a <unknown>\n#1 0x55908d1a3481 <unknown>\n#2 0x55908d245e51 <unknown>\n#3 0x55908d2158e2 <unknown>\n#4 0x55908d23408a <unknown>\n#5 0x55908d215683 <unknown>\n#6 0x55908d1e5d71 <unknown>\n#7 0x55908d1e67de <unknown>\n#8 0x55908d49a2ab <unknown>\n#9 0x55908d49e242 <unknown>\n#10 0x55908d487665 <unknown>\n#11 0x55908d49edd2 <unknown>\n#12 0x55908d46c2af <unknown>\n#13 0x55908d4c1eb8 <unknown>\n#14 0x55908d4c2090 <unknown>\n#15 0x55908d4d14ec <unknown>\n#16 0x7f1010094ac3 <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"11fd50e30bce23b27ba85ce58257285a\")>\n\n    @pytest.fixture\n    def auth_user_admin_to_seo_prod(driver):\n        main_page = MainPage(driver)\n        url = Urls.MAIN_URL_SEO_PROD + Urls.AUTH\n        cookies = {'name': 'token', 'value': os.environ[\"SEO_ADMIN\"]}\n        driver.get(url)\n>       driver.add_cookie(cookies)\n\ntests/conftest.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:636: in add_cookie\n    self.execute(Command.ADD_COOKIE, {\"cookie\": cookie_dict})\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f04e1cd24b0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid cookie domain\",\"message\":\"invalid cookie domain\\\\n  (Session info...\\\\n#14 0x55908d4c2090 \\\\u003Cunknown>\\\\n#15 0x55908d4d14ec \\\\u003Cunknown>\\\\n#16 0x7f1010094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\nE         (Session info: chrome-headless-shell=127.0.6533.88)\nE       Stacktrace:\nE       #0 0x55908d4d271a <unknown>\nE       #1 0x55908d1a3481 <unknown>\nE       #2 0x55908d245e51 <unknown>\nE       #3 0x55908d2158e2 <unknown>\nE       #4 0x55908d23408a <unknown>\nE       #5 0x55908d215683 <unknown>\nE       #6 0x55908d1e5d71 <unknown>\nE       #7 0x55908d1e67de <unknown>\nE       #8 0x55908d49a2ab <unknown>\nE       #9 0x55908d49e242 <unknown>\nE       #10 0x55908d487665 <unknown>\nE       #11 0x55908d49edd2 <unknown>\nE       #12 0x55908d46c2af <unknown>\nE       #13 0x55908d4c1eb8 <unknown>\nE       #14 0x55908d4c2090 <unknown>\nE       #15 0x55908d4d14ec <unknown>\nE       #16 0x7f1010094ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidCookieDomainException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1723428639795,
      "stop" : 1723428639995,
      "duration" : 200
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_user_admin_to_seo_prod",
    "time" : {
      "start" : 1723428639995,
      "stop" : 1723428640323,
      "duration" : 328
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x55908d4d271a <unknown>\n#1 0x55908d1a3481 <unknown>\n#2 0x55908d245e51 <unknown>\n#3 0x55908d2158e2 <unknown>\n#4 0x55908d23408a <unknown>\n#5 0x55908d215683 <unknown>\n#6 0x55908d1e5d71 <unknown>\n#7 0x55908d1e67de <unknown>\n#8 0x55908d49a2ab <unknown>\n#9 0x55908d49e242 <unknown>\n#10 0x55908d487665 <unknown>\n#11 0x55908d49edd2 <unknown>\n#12 0x55908d46c2af <unknown>\n#13 0x55908d4c1eb8 <unknown>\n#14 0x55908d4c2090 <unknown>\n#15 0x55908d4d14ec <unknown>\n#16 0x7f1010094ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 917, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/DealerPassport/DealerPassport/tests/conftest.py\", line 28, in auth_user_admin_to_seo_prod\n    driver.add_cookie(cookies)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 636, in add_cookie\n    self.execute(Command.ADD_COOKIE, {\"cookie\": cookie_dict})\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1723428577028,
      "stop" : 1723428577028,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1723428640354,
      "stop" : 1723428640412,
      "duration" : 58
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Main Page smoke_test"
  }, {
    "name" : "tag",
    "value" : "smoke_test"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "main_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestMainPageSmoke"
  }, {
    "name" : "host",
    "value" : "fv-az1501-607"
  }, {
    "name" : "thread",
    "value" : "2340-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.main_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'https://dealer-passport-test.xsfera.ru:3001/documents/'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 77,
        "unknown" : 0,
        "total" : 80
      },
      "items" : [ {
        "uid" : "59f2a7dd91050a93",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/81//#testresult/59f2a7dd91050a93",
        "status" : "passed",
        "time" : {
          "start" : 1723342699793,
          "stop" : 1723342710693,
          "duration" : 10900
        }
      }, {
        "uid" : "6f6cb4522c132545",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/80//#testresult/6f6cb4522c132545",
        "status" : "passed",
        "time" : {
          "start" : 1723255972276,
          "stop" : 1723255983219,
          "duration" : 10943
        }
      }, {
        "uid" : "6900d8e1ae3d5196",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/79//#testresult/6900d8e1ae3d5196",
        "status" : "passed",
        "time" : {
          "start" : 1723169616617,
          "stop" : 1723169627396,
          "duration" : 10779
        }
      }, {
        "uid" : "2f639f80f0fb706f",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/78//#testresult/2f639f80f0fb706f",
        "status" : "passed",
        "time" : {
          "start" : 1723083177651,
          "stop" : 1723083188586,
          "duration" : 10935
        }
      }, {
        "uid" : "dbf2a3f84b394a8b",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/77//#testresult/dbf2a3f84b394a8b",
        "status" : "passed",
        "time" : {
          "start" : 1722996800758,
          "stop" : 1722996811553,
          "duration" : 10795
        }
      }, {
        "uid" : "c3a0f4a5534b8a74",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/76//#testresult/c3a0f4a5534b8a74",
        "status" : "passed",
        "time" : {
          "start" : 1722910277691,
          "stop" : 1722910288472,
          "duration" : 10781
        }
      }, {
        "uid" : "60f87003c137900e",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/75//#testresult/60f87003c137900e",
        "status" : "passed",
        "time" : {
          "start" : 1722824015527,
          "stop" : 1722824026426,
          "duration" : 10899
        }
      }, {
        "uid" : "17a4173604c775b0",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/74//#testresult/17a4173604c775b0",
        "status" : "passed",
        "time" : {
          "start" : 1722737747672,
          "stop" : 1722737758459,
          "duration" : 10787
        }
      }, {
        "uid" : "3811272c6d6e22d7",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/73//#testresult/3811272c6d6e22d7",
        "status" : "passed",
        "time" : {
          "start" : 1722650941035,
          "stop" : 1722650951842,
          "duration" : 10807
        }
      }, {
        "uid" : "df35e208c2a1f7fd",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/72//#testresult/df35e208c2a1f7fd",
        "status" : "passed",
        "time" : {
          "start" : 1722564869910,
          "stop" : 1722564880711,
          "duration" : 10801
        }
      }, {
        "uid" : "aed49bf9ea668873",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/71//#testresult/aed49bf9ea668873",
        "status" : "passed",
        "time" : {
          "start" : 1722478699207,
          "stop" : 1722478710118,
          "duration" : 10911
        }
      }, {
        "uid" : "d505115edf93b260",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/70//#testresult/d505115edf93b260",
        "status" : "passed",
        "time" : {
          "start" : 1722390660914,
          "stop" : 1722390671812,
          "duration" : 10898
        }
      }, {
        "uid" : "84d5a9bc55538834",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/69//#testresult/84d5a9bc55538834",
        "status" : "passed",
        "time" : {
          "start" : 1722305467477,
          "stop" : 1722305478339,
          "duration" : 10862
        }
      }, {
        "uid" : "2ff23bd85c0ea1be",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/68//#testresult/2ff23bd85c0ea1be",
        "status" : "passed",
        "time" : {
          "start" : 1722219202715,
          "stop" : 1722219213502,
          "duration" : 10787
        }
      }, {
        "uid" : "3bb0aef8cf658ebd",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/67//#testresult/3bb0aef8cf658ebd",
        "status" : "passed",
        "time" : {
          "start" : 1722132929352,
          "stop" : 1722132940158,
          "duration" : 10806
        }
      }, {
        "uid" : "8acac1a35ac4b692",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/66//#testresult/8acac1a35ac4b692",
        "status" : "passed",
        "time" : {
          "start" : 1722046109026,
          "stop" : 1722046119819,
          "duration" : 10793
        }
      }, {
        "uid" : "700251a2f2cc9577",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/65//#testresult/700251a2f2cc9577",
        "status" : "passed",
        "time" : {
          "start" : 1721959789639,
          "stop" : 1721959800441,
          "duration" : 10802
        }
      }, {
        "uid" : "2b125cc78fd0e720",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/64//#testresult/2b125cc78fd0e720",
        "status" : "passed",
        "time" : {
          "start" : 1721873469345,
          "stop" : 1721873480312,
          "duration" : 10967
        }
      }, {
        "uid" : "6724bbf2072999cd",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/63//#testresult/6724bbf2072999cd",
        "status" : "passed",
        "time" : {
          "start" : 1721787031755,
          "stop" : 1721787042581,
          "duration" : 10826
        }
      }, {
        "uid" : "f8bfb0c03e3255ad",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/62//#testresult/f8bfb0c03e3255ad",
        "status" : "passed",
        "time" : {
          "start" : 1721700683069,
          "stop" : 1721700693946,
          "duration" : 10877
        }
      } ]
    },
    "tags" : [ "smoke_test" ]
  },
  "source" : "9359e8a23946e28f.json",
  "parameterValues" : [ "'https://dealer-passport-test.xsfera.ru:3001/documents/'" ]
}