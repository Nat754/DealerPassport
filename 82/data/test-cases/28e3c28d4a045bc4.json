{
  "uid" : "28e3c28d4a045bc4",
  "name" : "test_open_seo[https://dealer-passport-test.xsfera.ru/gr/]",
  "fullName" : "tests.main_page_test.TestMainPageSmoke#test_open_seo",
  "historyId" : "99a8f927fc0fc9f769722a599dd96588",
  "time" : {
    "start" : 1723428631654,
    "stop" : 1723428631654,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x55dcd324671a <unknown>\n#1 0x55dcd2f17481 <unknown>\n#2 0x55dcd2fb9e51 <unknown>\n#3 0x55dcd2f898e2 <unknown>\n#4 0x55dcd2fa808a <unknown>\n#5 0x55dcd2f89683 <unknown>\n#6 0x55dcd2f59d71 <unknown>\n#7 0x55dcd2f5a7de <unknown>\n#8 0x55dcd320e2ab <unknown>\n#9 0x55dcd3212242 <unknown>\n#10 0x55dcd31fb665 <unknown>\n#11 0x55dcd3212dd2 <unknown>\n#12 0x55dcd31e02af <unknown>\n#13 0x55dcd3235eb8 <unknown>\n#14 0x55dcd3236090 <unknown>\n#15 0x55dcd32454ec <unknown>\n#16 0x7fe5f9e94ac3 <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"505412ec3870dfe53c07325c0105618c\")>\n\n    @pytest.fixture\n    def auth_user_admin_to_seo(driver):\n        main_page = MainPage(driver)\n        url = Urls.MAIN_URL_SEO + Urls.AUTH\n        cookies = {'name': 'token', 'value': os.environ[\"SEO_ADMIN\"]}\n        driver.get(url)\n>       driver.add_cookie(cookies)\n\ntests/conftest.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:636: in add_cookie\n    self.execute(Command.ADD_COOKIE, {\"cookie\": cookie_dict})\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f04e1c37380>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid cookie domain\",\"message\":\"invalid cookie domain\\\\n  (Session info...\\\\n#14 0x55dcd3236090 \\\\u003Cunknown>\\\\n#15 0x55dcd32454ec \\\\u003Cunknown>\\\\n#16 0x7fe5f9e94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\nE         (Session info: chrome-headless-shell=127.0.6533.88)\nE       Stacktrace:\nE       #0 0x55dcd324671a <unknown>\nE       #1 0x55dcd2f17481 <unknown>\nE       #2 0x55dcd2fb9e51 <unknown>\nE       #3 0x55dcd2f898e2 <unknown>\nE       #4 0x55dcd2fa808a <unknown>\nE       #5 0x55dcd2f89683 <unknown>\nE       #6 0x55dcd2f59d71 <unknown>\nE       #7 0x55dcd2f5a7de <unknown>\nE       #8 0x55dcd320e2ab <unknown>\nE       #9 0x55dcd3212242 <unknown>\nE       #10 0x55dcd31fb665 <unknown>\nE       #11 0x55dcd3212dd2 <unknown>\nE       #12 0x55dcd31e02af <unknown>\nE       #13 0x55dcd3235eb8 <unknown>\nE       #14 0x55dcd3236090 <unknown>\nE       #15 0x55dcd32454ec <unknown>\nE       #16 0x7fe5f9e94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidCookieDomainException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1723428631655,
      "stop" : 1723428631854,
      "duration" : 199
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_user_admin_to_seo",
    "time" : {
      "start" : 1723428631854,
      "stop" : 1723428632182,
      "duration" : 328
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x55dcd324671a <unknown>\n#1 0x55dcd2f17481 <unknown>\n#2 0x55dcd2fb9e51 <unknown>\n#3 0x55dcd2f898e2 <unknown>\n#4 0x55dcd2fa808a <unknown>\n#5 0x55dcd2f89683 <unknown>\n#6 0x55dcd2f59d71 <unknown>\n#7 0x55dcd2f5a7de <unknown>\n#8 0x55dcd320e2ab <unknown>\n#9 0x55dcd3212242 <unknown>\n#10 0x55dcd31fb665 <unknown>\n#11 0x55dcd3212dd2 <unknown>\n#12 0x55dcd31e02af <unknown>\n#13 0x55dcd3235eb8 <unknown>\n#14 0x55dcd3236090 <unknown>\n#15 0x55dcd32454ec <unknown>\n#16 0x7fe5f9e94ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 917, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/DealerPassport/DealerPassport/tests/conftest.py\", line 16, in auth_user_admin_to_seo\n    driver.add_cookie(cookies)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 636, in add_cookie\n    self.execute(Command.ADD_COOKIE, {\"cookie\": cookie_dict})\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1723428577028,
      "stop" : 1723428577028,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1723428632213,
      "stop" : 1723428632272,
      "duration" : 59
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Main Page smoke_test"
  }, {
    "name" : "tag",
    "value" : "smoke_test"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "main_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestMainPageSmoke"
  }, {
    "name" : "host",
    "value" : "fv-az1501-607"
  }, {
    "name" : "thread",
    "value" : "2340-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.main_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'https://dealer-passport-test.xsfera.ru/gr/'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 10,
        "skipped" : 0,
        "passed" : 70,
        "unknown" : 0,
        "total" : 80
      },
      "items" : [ {
        "uid" : "418ca83747baa046",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/81//#testresult/418ca83747baa046",
        "status" : "passed",
        "time" : {
          "start" : 1723342505535,
          "stop" : 1723342516491,
          "duration" : 10956
        }
      }, {
        "uid" : "a2f12be55a1ea5d9",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/80//#testresult/a2f12be55a1ea5d9",
        "status" : "passed",
        "time" : {
          "start" : 1723255778615,
          "stop" : 1723255789614,
          "duration" : 10999
        }
      }, {
        "uid" : "3160df274eb5ddcf",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/79//#testresult/3160df274eb5ddcf",
        "status" : "passed",
        "time" : {
          "start" : 1723169439130,
          "stop" : 1723169449967,
          "duration" : 10837
        }
      }, {
        "uid" : "d854db78f5d91d15",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/78//#testresult/d854db78f5d91d15",
        "status" : "passed",
        "time" : {
          "start" : 1723082983760,
          "stop" : 1723082994720,
          "duration" : 10960
        }
      }, {
        "uid" : "e262a834005fdeb8",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/77//#testresult/e262a834005fdeb8",
        "status" : "passed",
        "time" : {
          "start" : 1722996623915,
          "stop" : 1722996634724,
          "duration" : 10809
        }
      }, {
        "uid" : "c4c240344f3208ba",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/76//#testresult/c4c240344f3208ba",
        "status" : "passed",
        "time" : {
          "start" : 1722910096544,
          "stop" : 1722910107386,
          "duration" : 10842
        }
      }, {
        "uid" : "9aa29b4b5ec2795a",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/75//#testresult/9aa29b4b5ec2795a",
        "status" : "passed",
        "time" : {
          "start" : 1722823824484,
          "stop" : 1722823835370,
          "duration" : 10886
        }
      }, {
        "uid" : "88efd789b8c16fd7",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/74//#testresult/88efd789b8c16fd7",
        "status" : "passed",
        "time" : {
          "start" : 1722737565372,
          "stop" : 1722737576154,
          "duration" : 10782
        }
      }, {
        "uid" : "40f6726feba49974",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/73//#testresult/40f6726feba49974",
        "status" : "passed",
        "time" : {
          "start" : 1722650762627,
          "stop" : 1722650773391,
          "duration" : 10764
        }
      }, {
        "uid" : "cd04953e66492ea6",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/72//#testresult/cd04953e66492ea6",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x560efd382c5a <unknown>\n#1 0x560efd065e2c <unknown>\n#2 0x560efd0b2661 <unknown>\n#3 0x560efd0b2751 <unknown>\n#4 0x560efd0f6f64 <unknown>\n#5 0x560efd0d55ed <unknown>\n#6 0x560efd0f4303 <unknown>\n#7 0x560efd0d5363 <unknown>\n#8 0x560efd0a5247 <unknown>\n#9 0x560efd0a5b9e <unknown>\n#10 0x560efd34922b <unknown>\n#11 0x560efd34d2d1 <unknown>\n#12 0x560efd334ade <unknown>\n#13 0x560efd34de32 <unknown>\n#14 0x560efd31977f <unknown>\n#15 0x560efd372618 <unknown>\n#16 0x560efd3727f0 <unknown>\n#17 0x560efd381d8c <unknown>\n#18 0x7fe03d494ac3 <unknown>",
        "time" : {
          "start" : 1722564695243,
          "stop" : 1722564695243,
          "duration" : 0
        }
      }, {
        "uid" : "8f8f90119d4c4675",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/71//#testresult/8f8f90119d4c4675",
        "status" : "passed",
        "time" : {
          "start" : 1722478506007,
          "stop" : 1722478516951,
          "duration" : 10944
        }
      }, {
        "uid" : "cb49301c4d42a940",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/70//#testresult/cb49301c4d42a940",
        "status" : "passed",
        "time" : {
          "start" : 1722390472141,
          "stop" : 1722390483073,
          "duration" : 10932
        }
      }, {
        "uid" : "3ed0a35cbcfc1cfe",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/69//#testresult/3ed0a35cbcfc1cfe",
        "status" : "passed",
        "time" : {
          "start" : 1722305277945,
          "stop" : 1722305288866,
          "duration" : 10921
        }
      }, {
        "uid" : "19f26a207b06ac59",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/68//#testresult/19f26a207b06ac59",
        "status" : "passed",
        "time" : {
          "start" : 1722219026498,
          "stop" : 1722219037288,
          "duration" : 10790
        }
      }, {
        "uid" : "2497aef0cbf0539f",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/67//#testresult/2497aef0cbf0539f",
        "status" : "passed",
        "time" : {
          "start" : 1722132747933,
          "stop" : 1722132758819,
          "duration" : 10886
        }
      }, {
        "uid" : "4b8707895c89dceb",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/66//#testresult/4b8707895c89dceb",
        "status" : "passed",
        "time" : {
          "start" : 1722045931251,
          "stop" : 1722045942063,
          "duration" : 10812
        }
      }, {
        "uid" : "b573e6c7b068c5ed",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/65//#testresult/b573e6c7b068c5ed",
        "status" : "passed",
        "time" : {
          "start" : 1721959613131,
          "stop" : 1721959623918,
          "duration" : 10787
        }
      }, {
        "uid" : "c8ea3691d484be7c",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/64//#testresult/c8ea3691d484be7c",
        "status" : "passed",
        "time" : {
          "start" : 1721873276643,
          "stop" : 1721873287607,
          "duration" : 10964
        }
      }, {
        "uid" : "1b914f3924a8f7e2",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/63//#testresult/1b914f3924a8f7e2",
        "status" : "passed",
        "time" : {
          "start" : 1721786859302,
          "stop" : 1721786870155,
          "duration" : 10853
        }
      }, {
        "uid" : "56f6773be20abd4d",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/62//#testresult/56f6773be20abd4d",
        "status" : "passed",
        "time" : {
          "start" : 1721700502789,
          "stop" : 1721700513729,
          "duration" : 10940
        }
      } ]
    },
    "tags" : [ "smoke_test" ]
  },
  "source" : "28e3c28d4a045bc4.json",
  "parameterValues" : [ "'https://dealer-passport-test.xsfera.ru/gr/'" ]
}