{
  "uid" : "6b32e087cf51566b",
  "name" : "test_open_seo_prod[https://dealer-passport-test.xsfera.ru:3001/accounting/]",
  "fullName" : "tests.main_page_test.TestMainPageSmoke#test_open_seo_prod",
  "historyId" : "ab76e2a7324e06a194c0d659355ab748",
  "time" : {
    "start" : 1723428639169,
    "stop" : 1723428639169,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x55565cae871a <unknown>\n#1 0x55565c7b9481 <unknown>\n#2 0x55565c85be51 <unknown>\n#3 0x55565c82b8e2 <unknown>\n#4 0x55565c84a08a <unknown>\n#5 0x55565c82b683 <unknown>\n#6 0x55565c7fbd71 <unknown>\n#7 0x55565c7fc7de <unknown>\n#8 0x55565cab02ab <unknown>\n#9 0x55565cab4242 <unknown>\n#10 0x55565ca9d665 <unknown>\n#11 0x55565cab4dd2 <unknown>\n#12 0x55565ca822af <unknown>\n#13 0x55565cad7eb8 <unknown>\n#14 0x55565cad8090 <unknown>\n#15 0x55565cae74ec <unknown>\n#16 0x7f2128694ac3 <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8932b80b22769270b5c1395853f885fc\")>\n\n    @pytest.fixture\n    def auth_user_admin_to_seo_prod(driver):\n        main_page = MainPage(driver)\n        url = Urls.MAIN_URL_SEO_PROD + Urls.AUTH\n        cookies = {'name': 'token', 'value': os.environ[\"SEO_ADMIN\"]}\n        driver.get(url)\n>       driver.add_cookie(cookies)\n\ntests/conftest.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:636: in add_cookie\n    self.execute(Command.ADD_COOKIE, {\"cookie\": cookie_dict})\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f04e1d4b3b0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid cookie domain\",\"message\":\"invalid cookie domain\\\\n  (Session info...\\\\n#14 0x55565cad8090 \\\\u003Cunknown>\\\\n#15 0x55565cae74ec \\\\u003Cunknown>\\\\n#16 0x7f2128694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\nE         (Session info: chrome-headless-shell=127.0.6533.88)\nE       Stacktrace:\nE       #0 0x55565cae871a <unknown>\nE       #1 0x55565c7b9481 <unknown>\nE       #2 0x55565c85be51 <unknown>\nE       #3 0x55565c82b8e2 <unknown>\nE       #4 0x55565c84a08a <unknown>\nE       #5 0x55565c82b683 <unknown>\nE       #6 0x55565c7fbd71 <unknown>\nE       #7 0x55565c7fc7de <unknown>\nE       #8 0x55565cab02ab <unknown>\nE       #9 0x55565cab4242 <unknown>\nE       #10 0x55565ca9d665 <unknown>\nE       #11 0x55565cab4dd2 <unknown>\nE       #12 0x55565ca822af <unknown>\nE       #13 0x55565cad7eb8 <unknown>\nE       #14 0x55565cad8090 <unknown>\nE       #15 0x55565cae74ec <unknown>\nE       #16 0x7f2128694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidCookieDomainException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "auth_user_admin_to_seo_prod",
    "time" : {
      "start" : 1723428639370,
      "stop" : 1723428639704,
      "duration" : 334
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.InvalidCookieDomainException: Message: invalid cookie domain\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x55565cae871a <unknown>\n#1 0x55565c7b9481 <unknown>\n#2 0x55565c85be51 <unknown>\n#3 0x55565c82b8e2 <unknown>\n#4 0x55565c84a08a <unknown>\n#5 0x55565c82b683 <unknown>\n#6 0x55565c7fbd71 <unknown>\n#7 0x55565c7fc7de <unknown>\n#8 0x55565cab02ab <unknown>\n#9 0x55565cab4242 <unknown>\n#10 0x55565ca9d665 <unknown>\n#11 0x55565cab4dd2 <unknown>\n#12 0x55565ca822af <unknown>\n#13 0x55565cad7eb8 <unknown>\n#14 0x55565cad8090 <unknown>\n#15 0x55565cae74ec <unknown>\n#16 0x7f2128694ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 917, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/DealerPassport/DealerPassport/tests/conftest.py\", line 28, in auth_user_admin_to_seo_prod\n    driver.add_cookie(cookies)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 636, in add_cookie\n    self.execute(Command.ADD_COOKIE, {\"cookie\": cookie_dict})\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1723428639170,
      "stop" : 1723428639370,
      "duration" : 200
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1723428577028,
      "stop" : 1723428577028,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1723428639735,
      "stop" : 1723428639793,
      "duration" : 58
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Main Page smoke_test"
  }, {
    "name" : "tag",
    "value" : "smoke_test"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "main_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestMainPageSmoke"
  }, {
    "name" : "host",
    "value" : "fv-az1501-607"
  }, {
    "name" : "thread",
    "value" : "2340-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.main_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'https://dealer-passport-test.xsfera.ru:3001/accounting/'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 77,
        "unknown" : 0,
        "total" : 80
      },
      "items" : [ {
        "uid" : "8a28fedbaa3bd2f3",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/81//#testresult/8a28fedbaa3bd2f3",
        "status" : "passed",
        "time" : {
          "start" : 1723342684939,
          "stop" : 1723342695821,
          "duration" : 10882
        }
      }, {
        "uid" : "2830f573691a6166",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/80//#testresult/2830f573691a6166",
        "status" : "passed",
        "time" : {
          "start" : 1723255957400,
          "stop" : 1723255968313,
          "duration" : 10913
        }
      }, {
        "uid" : "506c6ef7e6140267",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/79//#testresult/506c6ef7e6140267",
        "status" : "passed",
        "time" : {
          "start" : 1723169602850,
          "stop" : 1723169613598,
          "duration" : 10748
        }
      }, {
        "uid" : "f65a6a50389634c8",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/78//#testresult/f65a6a50389634c8",
        "status" : "passed",
        "time" : {
          "start" : 1723083162636,
          "stop" : 1723083173553,
          "duration" : 10917
        }
      }, {
        "uid" : "3ab01901ba70184f",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/77//#testresult/3ab01901ba70184f",
        "status" : "passed",
        "time" : {
          "start" : 1722996787191,
          "stop" : 1722996797970,
          "duration" : 10779
        }
      }, {
        "uid" : "34afa7105c6dac96",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/76//#testresult/34afa7105c6dac96",
        "status" : "passed",
        "time" : {
          "start" : 1722910263585,
          "stop" : 1722910274400,
          "duration" : 10815
        }
      }, {
        "uid" : "5c0bb33110c3ee19",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/75//#testresult/5c0bb33110c3ee19",
        "status" : "passed",
        "time" : {
          "start" : 1722824000754,
          "stop" : 1722824011645,
          "duration" : 10891
        }
      }, {
        "uid" : "ce0192de7344ce82",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/74//#testresult/ce0192de7344ce82",
        "status" : "passed",
        "time" : {
          "start" : 1722737733570,
          "stop" : 1722737744353,
          "duration" : 10783
        }
      }, {
        "uid" : "6b21de90c8d902d9",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/73//#testresult/6b21de90c8d902d9",
        "status" : "passed",
        "time" : {
          "start" : 1722650927349,
          "stop" : 1722650938134,
          "duration" : 10785
        }
      }, {
        "uid" : "59f4a3ff9e990ea7",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/72//#testresult/59f4a3ff9e990ea7",
        "status" : "passed",
        "time" : {
          "start" : 1722564856145,
          "stop" : 1722564866909,
          "duration" : 10764
        }
      }, {
        "uid" : "5186437ed4bebb2f",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/71//#testresult/5186437ed4bebb2f",
        "status" : "passed",
        "time" : {
          "start" : 1722478684209,
          "stop" : 1722478695111,
          "duration" : 10902
        }
      }, {
        "uid" : "e454176956f0f47b",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/70//#testresult/e454176956f0f47b",
        "status" : "passed",
        "time" : {
          "start" : 1722390646227,
          "stop" : 1722390657132,
          "duration" : 10905
        }
      }, {
        "uid" : "6a4e19f9cb8a9383",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/69//#testresult/6a4e19f9cb8a9383",
        "status" : "passed",
        "time" : {
          "start" : 1722305451881,
          "stop" : 1722305462768,
          "duration" : 10887
        }
      }, {
        "uid" : "dfe45103847040be",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/68//#testresult/dfe45103847040be",
        "status" : "passed",
        "time" : {
          "start" : 1722219189122,
          "stop" : 1722219199899,
          "duration" : 10777
        }
      }, {
        "uid" : "501d63668dcb70e8",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/67//#testresult/501d63668dcb70e8",
        "status" : "passed",
        "time" : {
          "start" : 1722132915399,
          "stop" : 1722132926225,
          "duration" : 10826
        }
      }, {
        "uid" : "c3449020addc4429",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/66//#testresult/c3449020addc4429",
        "status" : "passed",
        "time" : {
          "start" : 1722046095315,
          "stop" : 1722046106123,
          "duration" : 10808
        }
      }, {
        "uid" : "ae325fee34190912",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/65//#testresult/ae325fee34190912",
        "status" : "passed",
        "time" : {
          "start" : 1721959775914,
          "stop" : 1721959786726,
          "duration" : 10812
        }
      }, {
        "uid" : "71ce9cec98d2c48",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/64//#testresult/71ce9cec98d2c48",
        "status" : "passed",
        "time" : {
          "start" : 1721873454521,
          "stop" : 1721873465447,
          "duration" : 10926
        }
      }, {
        "uid" : "e9577e7b24fab9f9",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/63//#testresult/e9577e7b24fab9f9",
        "status" : "passed",
        "time" : {
          "start" : 1721787017858,
          "stop" : 1721787028718,
          "duration" : 10860
        }
      }, {
        "uid" : "f24ddee432fc55d1",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/62//#testresult/f24ddee432fc55d1",
        "status" : "passed",
        "time" : {
          "start" : 1721700668459,
          "stop" : 1721700679369,
          "duration" : 10910
        }
      } ]
    },
    "tags" : [ "smoke_test" ]
  },
  "source" : "6b32e087cf51566b.json",
  "parameterValues" : [ "'https://dealer-passport-test.xsfera.ru:3001/accounting/'" ]
}