{
  "uid" : "64c4bcf7ce987580",
  "name" : "Проверить отсутствие ошибок при открытии https://dealer-passport-test.xsfera.ru:3001/staff/ на сервере СЕО prod",
  "fullName" : "tests.main_page_test.TestMainPageSmoke#test_open_seo_prod",
  "historyId" : "c4e7676cc550504f543bf74fa6bcf031",
  "time" : {
    "start" : 1717121333146,
    "stop" : 1717121335905,
    "duration" : 2759
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Ошибка: ['Произошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED']\nassert None\n +  where None = <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f28277884d0>>()\n +    where <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f28277884d0>> = <pages.main_page.MainPage object at 0x7f28277884d0>.check_not_errors",
  "statusTrace" : "self = <tests.main_page_test.TestMainPageSmoke object at 0x7f2827afa000>\nauth_user_admin_to_seo_prod = <pages.main_page.MainPage object at 0x7f28277884d0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ce4cdf5a6c84ec17fb47248ea2f24526\")>\nurl = 'https://dealer-passport-test.xsfera.ru:3001/staff/'\n\n    @pytest.mark.parametrize('url', Urls.LIST_URLS_SEO_PROD)\n    def test_open_seo_prod(self, auth_user_admin_to_seo_prod, driver, url):\n        allure.dynamic.title(f'Проверить отсутствие ошибок при открытии {url} на сервере СЕО prod')\n        driver.get(url)\n>       assert auth_user_admin_to_seo_prod.check_not_errors(), \\\n            f'Ошибка: {[item.text for item in auth_user_admin_to_seo_prod.check_error_notifications()]}'\nE       AssertionError: Ошибка: ['Произошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED']\nE       assert None\nE        +  where None = <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f28277884d0>>()\nE        +    where <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f28277884d0>> = <pages.main_page.MainPage object at 0x7f28277884d0>.check_not_errors\n\ntests/main_page_test.py:37: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "auth_user_admin_to_seo_prod",
    "time" : {
      "start" : 1717121330638,
      "stop" : 1717121333146,
      "duration" : 2508
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки '('xpath', '//span[text()=\"Согласен\"]')' на главной странице",
      "time" : {
        "start" : 1717121333065,
        "stop" : 1717121333095,
        "duration" : 30
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1717121330439,
      "stop" : 1717121330638,
      "duration" : 199
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1717120938602,
      "stop" : 1717120938602,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Ошибка: ['Произошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED']\nassert None\n +  where None = <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f28277884d0>>()\n +    where <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f28277884d0>> = <pages.main_page.MainPage object at 0x7f28277884d0>.check_not_errors",
    "statusTrace" : "self = <tests.main_page_test.TestMainPageSmoke object at 0x7f2827afa000>\nauth_user_admin_to_seo_prod = <pages.main_page.MainPage object at 0x7f28277884d0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ce4cdf5a6c84ec17fb47248ea2f24526\")>\nurl = 'https://dealer-passport-test.xsfera.ru:3001/staff/'\n\n    @pytest.mark.parametrize('url', Urls.LIST_URLS_SEO_PROD)\n    def test_open_seo_prod(self, auth_user_admin_to_seo_prod, driver, url):\n        allure.dynamic.title(f'Проверить отсутствие ошибок при открытии {url} на сервере СЕО prod')\n        driver.get(url)\n>       assert auth_user_admin_to_seo_prod.check_not_errors(), \\\n            f'Ошибка: {[item.text for item in auth_user_admin_to_seo_prod.check_error_notifications()]}'\nE       AssertionError: Ошибка: ['Произошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED']\nE       assert None\nE        +  where None = <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f28277884d0>>()\nE        +    where <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f28277884d0>> = <pages.main_page.MainPage object at 0x7f28277884d0>.check_not_errors\n\ntests/main_page_test.py:37: AssertionError",
    "steps" : [ {
      "name" : "Проверить отсутствие ошибок",
      "time" : {
        "start" : 1717121333777,
        "stop" : 1717121335855,
        "duration" : 2078
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверить видимость ошибок",
      "time" : {
        "start" : 1717121335855,
        "stop" : 1717121335869,
        "duration" : 14
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "6bce1fb12d126842",
      "name" : "Screenshot",
      "source" : "6bce1fb12d126842.png",
      "type" : "image/png",
      "size" : 110372
    }, {
      "uid" : "70f8056104be9c1e",
      "name" : "HTML source",
      "source" : "70f8056104be9c1e.html",
      "type" : "text/html",
      "size" : 39879
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1717121336056,
      "stop" : 1717121336118,
      "duration" : 62
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Main Page smoke_test"
  }, {
    "name" : "tag",
    "value" : "smoke_test"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "main_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestMainPageSmoke"
  }, {
    "name" : "host",
    "value" : "fv-az740-937"
  }, {
    "name" : "thread",
    "value" : "2320-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.main_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'https://dealer-passport-test.xsfera.ru:3001/staff/'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 1,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "d99c2e2fbed104bf",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/5//#testresult/d99c2e2fbed104bf",
        "status" : "failed",
        "statusDetails" : "AssertionError: Ошибка: ['[Network error]: ServerError: Response not successful: Received status code 400\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED']\nassert None\n +  where None = <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f6cc7947e00>>()\n +    where <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f6cc7947e00>> = <pages.main_page.MainPage object at 0x7f6cc7947e00>.check_not_errors",
        "time" : {
          "start" : 1717080874811,
          "stop" : 1717080878045,
          "duration" : 3234
        }
      }, {
        "uid" : "681954458ae4bdaf",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/4//#testresult/681954458ae4bdaf",
        "status" : "passed",
        "time" : {
          "start" : 1717059474146,
          "stop" : 1717059484965,
          "duration" : 10819
        }
      } ]
    },
    "tags" : [ "smoke_test" ]
  },
  "source" : "64c4bcf7ce987580.json",
  "parameterValues" : [ "'https://dealer-passport-test.xsfera.ru:3001/staff/'" ]
}