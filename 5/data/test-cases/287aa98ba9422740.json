{
  "uid" : "287aa98ba9422740",
  "name" : "Проверить отсутствие ошибок при открытии https://dealer-passport-test.xsfera.ru/users/ на сервере СЕО",
  "fullName" : "tests.main_page_test.TestMainPageSmoke#test_open_seo",
  "historyId" : "d440e270cffee55c166bb9d25e4ce1f0",
  "time" : {
    "start" : 1717426171108,
    "stop" : 1717426172758,
    "duration" : 1650
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Ошибка: ['[Network error]: ServerError: Response not successful: Received status code 400\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED']\nassert None\n +  where None = <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7faf6eaf1a30>>()\n +    where <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7faf6eaf1a30>> = <pages.main_page.MainPage object at 0x7faf6eaf1a30>.check_not_errors",
  "statusTrace" : "self = <tests.main_page_test.TestMainPageSmoke object at 0x7faf6ecdcb00>\nauth_user_admin_to_seo = <pages.main_page.MainPage object at 0x7faf6eaf1a30>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8e0d4df8c077b4bcfe458f66a93da6fb\")>\nurl = 'https://dealer-passport-test.xsfera.ru/users/'\n\n    @pytest.mark.parametrize('url', Urls.LIST_URLS_SEO)\n    def test_open_seo(self, auth_user_admin_to_seo, driver, url):\n        allure.dynamic.title(f'Проверить отсутствие ошибок при открытии {url} на сервере СЕО')\n        driver.get(url)\n>       assert auth_user_admin_to_seo.check_not_errors(), \\\n            f'Ошибка: {[item.text for item in auth_user_admin_to_seo.check_error_notifications()]}'\nE       AssertionError: Ошибка: ['[Network error]: ServerError: Response not successful: Received status code 400\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED']\nE       assert None\nE        +  where None = <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7faf6eaf1a30>>()\nE        +    where <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7faf6eaf1a30>> = <pages.main_page.MainPage object at 0x7faf6eaf1a30>.check_not_errors\n\ntests/main_page_test.py:30: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1717426168346,
      "stop" : 1717426168548,
      "duration" : 202
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "auth_user_admin_to_seo",
    "time" : {
      "start" : 1717426168548,
      "stop" : 1717426171107,
      "duration" : 2559
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки '('xpath', '//span[text()=\"Согласен\"]')' на главной странице",
      "time" : {
        "start" : 1717426171022,
        "stop" : 1717426171055,
        "duration" : 33
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : true,
    "stepsCount" : 1,
    "attachmentsCount" : 0
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1717425962338,
      "stop" : 1717425962338,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Ошибка: ['[Network error]: ServerError: Response not successful: Received status code 400\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED']\nassert None\n +  where None = <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7faf6eaf1a30>>()\n +    where <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7faf6eaf1a30>> = <pages.main_page.MainPage object at 0x7faf6eaf1a30>.check_not_errors",
    "statusTrace" : "self = <tests.main_page_test.TestMainPageSmoke object at 0x7faf6ecdcb00>\nauth_user_admin_to_seo = <pages.main_page.MainPage object at 0x7faf6eaf1a30>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8e0d4df8c077b4bcfe458f66a93da6fb\")>\nurl = 'https://dealer-passport-test.xsfera.ru/users/'\n\n    @pytest.mark.parametrize('url', Urls.LIST_URLS_SEO)\n    def test_open_seo(self, auth_user_admin_to_seo, driver, url):\n        allure.dynamic.title(f'Проверить отсутствие ошибок при открытии {url} на сервере СЕО')\n        driver.get(url)\n>       assert auth_user_admin_to_seo.check_not_errors(), \\\n            f'Ошибка: {[item.text for item in auth_user_admin_to_seo.check_error_notifications()]}'\nE       AssertionError: Ошибка: ['[Network error]: ServerError: Response not successful: Received status code 400\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED']\nE       assert None\nE        +  where None = <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7faf6eaf1a30>>()\nE        +    where <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7faf6eaf1a30>> = <pages.main_page.MainPage object at 0x7faf6eaf1a30>.check_not_errors\n\ntests/main_page_test.py:30: AssertionError",
    "steps" : [ {
      "name" : "Проверить отсутствие ошибок",
      "time" : {
        "start" : 1717426171650,
        "stop" : 1717426172718,
        "duration" : 1068
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0
    }, {
      "name" : "Проверить видимость ошибок",
      "time" : {
        "start" : 1717426172718,
        "stop" : 1717426172732,
        "duration" : 14
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "e733cbb632e523e2",
      "name" : "Screenshot",
      "source" : "e733cbb632e523e2.png",
      "type" : "image/png",
      "size" : 193924
    }, {
      "uid" : "49904afd44de6138",
      "name" : "HTML source",
      "source" : "49904afd44de6138.html",
      "type" : "text/html",
      "size" : 119522
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 2,
    "attachmentsCount" : 2
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1717426172893,
      "stop" : 1717426172954,
      "duration" : 61
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Main Page smoke_test"
  }, {
    "name" : "tag",
    "value" : "smoke_test"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "main_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestMainPageSmoke"
  }, {
    "name" : "host",
    "value" : "fv-az1153-519"
  }, {
    "name" : "thread",
    "value" : "2225-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.main_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'https://dealer-passport-test.xsfera.ru/users/'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 4,
        "unknown" : 0,
        "total" : 9
      },
      "items" : [ {
        "uid" : "9e0927c86e9c0695",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/12//#testresult/9e0927c86e9c0695",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x555bf6002e8a <unknown>\n#1 0x555bf5cec45c <unknown>\n#2 0x555bf5d385b5 <unknown>\n#3 0x555bf5d38671 <unknown>\n#4 0x555bf5d7cf14 <unknown>\n#5 0x555bf5d5b4dd <unknown>\n#6 0x555bf5d7a2cc <unknown>\n#7 0x555bf5d5b253 <unknown>\n#8 0x555bf5d2b1c7 <unknown>\n#9 0x555bf5d2bb3e <unknown>\n#10 0x555bf5fc92cb <unknown>\n#11 0x555bf5fcd377 <unknown>\n#12 0x555bf5fb5dfe <unknown>\n#13 0x555bf5fcde42 <unknown>\n#14 0x555bf5f9a79f <unknown>\n#15 0x555bf5ff2178 <unknown>\n#16 0x555bf5ff234b <unknown>\n#17 0x555bf6001fbc <unknown>\n#18 0x7fb99ca94ac3 <unknown>",
        "time" : {
          "start" : 1717380319282,
          "stop" : 1717380319282,
          "duration" : 0
        }
      }, {
        "uid" : "5b20db77d9c908fc",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/11//#testresult/5b20db77d9c908fc",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5639d963ce8a <unknown>\n#1 0x5639d932645c <unknown>\n#2 0x5639d93725b5 <unknown>\n#3 0x5639d9372671 <unknown>\n#4 0x5639d93b6f14 <unknown>\n#5 0x5639d93954dd <unknown>\n#6 0x5639d93b42cc <unknown>\n#7 0x5639d9395253 <unknown>\n#8 0x5639d93651c7 <unknown>\n#9 0x5639d9365b3e <unknown>\n#10 0x5639d96032cb <unknown>\n#11 0x5639d9607377 <unknown>\n#12 0x5639d95efdfe <unknown>\n#13 0x5639d9607e42 <unknown>\n#14 0x5639d95d479f <unknown>\n#15 0x5639d962c178 <unknown>\n#16 0x5639d962c34b <unknown>\n#17 0x5639d963bfbc <unknown>\n#18 0x7fcfcb094ac3 <unknown>",
        "time" : {
          "start" : 1717294027024,
          "stop" : 1717294027024,
          "duration" : 0
        }
      }, {
        "uid" : "ffa8a44bdf7f5dc9",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/10//#testresult/ffa8a44bdf7f5dc9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Ошибка: ['[Network error]: ServerError: Response not successful: Received status code 400\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED']\nassert None\n +  where None = <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f9259099af0>>()\n +    where <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f9259099af0>> = <pages.main_page.MainPage object at 0x7f9259099af0>.check_not_errors",
        "time" : {
          "start" : 1717207600722,
          "stop" : 1717207603135,
          "duration" : 2413
        }
      }, {
        "uid" : "c3dda86867bd7d8c",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/5//#testresult/c3dda86867bd7d8c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Ошибка: ['[Network error]: ServerError: Response not successful: Received status code 400\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED']\nassert None\n +  where None = <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7fa8884b96d0>>()\n +    where <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7fa8884b96d0>> = <pages.main_page.MainPage object at 0x7fa8884b96d0>.check_not_errors",
        "time" : {
          "start" : 1717150298175,
          "stop" : 1717150299777,
          "duration" : 1602
        }
      }, {
        "uid" : "98b456e51c596461",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/5//#testresult/98b456e51c596461",
        "status" : "passed",
        "time" : {
          "start" : 1717143965732,
          "stop" : 1717143976669,
          "duration" : 10937
        }
      }, {
        "uid" : "15effbcce5e5f501",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/9//#testresult/15effbcce5e5f501",
        "status" : "passed",
        "time" : {
          "start" : 1717121151436,
          "stop" : 1717121162286,
          "duration" : 10850
        }
      }, {
        "uid" : "7f6bea5bba29314a",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/5//#testresult/7f6bea5bba29314a",
        "status" : "passed",
        "time" : {
          "start" : 1717080676564,
          "stop" : 1717080687470,
          "duration" : 10906
        }
      }, {
        "uid" : "eb70e612a946b1e8",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/4//#testresult/eb70e612a946b1e8",
        "status" : "passed",
        "time" : {
          "start" : 1717059290810,
          "stop" : 1717059301708,
          "duration" : 10898
        }
      } ]
    },
    "tags" : [ "smoke_test" ]
  },
  "source" : "287aa98ba9422740.json",
  "parameterValues" : [ "'https://dealer-passport-test.xsfera.ru/users/'" ]
}