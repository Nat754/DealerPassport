{
  "uid" : "d06133a63535ed1d",
  "name" : "Проверить отсутствие ошибок при открытии https://dealer-passport-test.xsfera.ru/q/ на сервере СЕО",
  "fullName" : "tests.main_page_test.TestMainPageSmoke#test_open_seo",
  "historyId" : "1fb1025992ec333cb53500ec94b03918",
  "time" : {
    "start" : 1721786873248,
    "stop" : 1721786874421,
    "duration" : 1173
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Ошибка: ['[Network error]: ServerError: Response not successful: Received status code 400\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED']\nassert None\n +  where None = <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f69e7259730>>()\n +    where <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f69e7259730>> = <pages.main_page.MainPage object at 0x7f69e7259730>.check_not_errors",
  "statusTrace" : "self = <tests.main_page_test.TestMainPageSmoke object at 0x7f69e73d9940>\nauth_user_admin_to_seo = <pages.main_page.MainPage object at 0x7f69e7259730>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"41652bc27e91674acc0f42cc178ea4f0\")>\nurl = 'https://dealer-passport-test.xsfera.ru/q/'\n\n    @pytest.mark.parametrize('url', Urls.LIST_URLS_SEO)\n    def test_open_seo(self, auth_user_admin_to_seo, driver, url):\n        allure.dynamic.title(f'Проверить отсутствие ошибок при открытии {url} на сервере СЕО')\n        driver.get(url)\n>       assert auth_user_admin_to_seo.check_not_errors(), \\\n            f'Ошибка: {[item.text for item in auth_user_admin_to_seo.check_error_notifications()]}'\nE       AssertionError: Ошибка: ['[Network error]: ServerError: Response not successful: Received status code 400\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED']\nE       assert None\nE        +  where None = <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f69e7259730>>()\nE        +    where <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f69e7259730>> = <pages.main_page.MainPage object at 0x7f69e7259730>.check_not_errors\n\ntests/main_page_test.py:30: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1721786870219,
      "stop" : 1721786870415,
      "duration" : 196
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1721786697413,
      "stop" : 1721786697413,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_user_admin_to_seo",
    "time" : {
      "start" : 1721786870415,
      "stop" : 1721786873247,
      "duration" : 2832
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Проверка видимости кнопки '('xpath', '//span[text()=\"Согласен\"]')' на главной странице",
      "time" : {
        "start" : 1721786873166,
        "stop" : 1721786873199,
        "duration" : 33
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Ошибка: ['[Network error]: ServerError: Response not successful: Received status code 400\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED']\nassert None\n +  where None = <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f69e7259730>>()\n +    where <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f69e7259730>> = <pages.main_page.MainPage object at 0x7f69e7259730>.check_not_errors",
    "statusTrace" : "self = <tests.main_page_test.TestMainPageSmoke object at 0x7f69e73d9940>\nauth_user_admin_to_seo = <pages.main_page.MainPage object at 0x7f69e7259730>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"41652bc27e91674acc0f42cc178ea4f0\")>\nurl = 'https://dealer-passport-test.xsfera.ru/q/'\n\n    @pytest.mark.parametrize('url', Urls.LIST_URLS_SEO)\n    def test_open_seo(self, auth_user_admin_to_seo, driver, url):\n        allure.dynamic.title(f'Проверить отсутствие ошибок при открытии {url} на сервере СЕО')\n        driver.get(url)\n>       assert auth_user_admin_to_seo.check_not_errors(), \\\n            f'Ошибка: {[item.text for item in auth_user_admin_to_seo.check_error_notifications()]}'\nE       AssertionError: Ошибка: ['[Network error]: ServerError: Response not successful: Received status code 400\\nПроизошла ошибка: errors.GRAPHQL_VALIDATION_FAILED']\nE       assert None\nE        +  where None = <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f69e7259730>>()\nE        +    where <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f69e7259730>> = <pages.main_page.MainPage object at 0x7f69e7259730>.check_not_errors\n\ntests/main_page_test.py:30: AssertionError",
    "steps" : [ {
      "name" : "Проверить отсутствие ошибок",
      "time" : {
        "start" : 1721786873859,
        "stop" : 1721786874397,
        "duration" : 538
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверить видимость ошибок",
      "time" : {
        "start" : 1721786874397,
        "stop" : 1721786874408,
        "duration" : 11
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "f15683ecf5f0589f",
      "name" : "Screenshot",
      "source" : "f15683ecf5f0589f.png",
      "type" : "image/png",
      "size" : 45423
    }, {
      "uid" : "72f841c3c82f7763",
      "name" : "HTML source",
      "source" : "72f841c3c82f7763.html",
      "type" : "text/html",
      "size" : 18799
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1721786874538,
      "stop" : 1721786874598,
      "duration" : 60
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Main Page smoke_test"
  }, {
    "name" : "tag",
    "value" : "smoke_test"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "main_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestMainPageSmoke"
  }, {
    "name" : "host",
    "value" : "fv-az1205-955"
  }, {
    "name" : "thread",
    "value" : "2260-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.main_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'https://dealer-passport-test.xsfera.ru/q/'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 8,
        "skipped" : 0,
        "passed" : 50,
        "unknown" : 0,
        "total" : 61
      },
      "items" : [ {
        "uid" : "9d26e95ce547cf03",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/62//#testresult/9d26e95ce547cf03",
        "status" : "failed",
        "statusDetails" : "AssertionError: Ошибка: ['[Network error]: ServerError: Response not successful: Received status code 400']\nassert None\n +  where None = <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f615fe63620>>()\n +    where <bound method MainPage.check_not_errors of <pages.main_page.MainPage object at 0x7f615fe63620>> = <pages.main_page.MainPage object at 0x7f615fe63620>.check_not_errors",
        "time" : {
          "start" : 1721700517384,
          "stop" : 1721700519137,
          "duration" : 1753
        }
      }, {
        "uid" : "2a0c12821955ec70",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/61//#testresult/2a0c12821955ec70",
        "status" : "passed",
        "time" : {
          "start" : 1721614307012,
          "stop" : 1721614317897,
          "duration" : 10885
        }
      }, {
        "uid" : "3d8675cc99e0fae0",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/60//#testresult/3d8675cc99e0fae0",
        "status" : "passed",
        "time" : {
          "start" : 1721527891418,
          "stop" : 1721527902270,
          "duration" : 10852
        }
      }, {
        "uid" : "2c770474da5df28a",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/59//#testresult/2c770474da5df28a",
        "status" : "passed",
        "time" : {
          "start" : 1721441070735,
          "stop" : 1721441081569,
          "duration" : 10834
        }
      }, {
        "uid" : "cd99308d68e6fa59",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/58//#testresult/cd99308d68e6fa59",
        "status" : "passed",
        "time" : {
          "start" : 1721354901606,
          "stop" : 1721354912615,
          "duration" : 11009
        }
      }, {
        "uid" : "beba94c6cbe1e844",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/57//#testresult/beba94c6cbe1e844",
        "status" : "passed",
        "time" : {
          "start" : 1721268391699,
          "stop" : 1721268402509,
          "duration" : 10810
        }
      }, {
        "uid" : "e6055f25015b86b3",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/56//#testresult/e6055f25015b86b3",
        "status" : "passed",
        "time" : {
          "start" : 1721182073521,
          "stop" : 1721182084328,
          "duration" : 10807
        }
      }, {
        "uid" : "a82cd6301e2b556c",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/55//#testresult/a82cd6301e2b556c",
        "status" : "passed",
        "time" : {
          "start" : 1721095742527,
          "stop" : 1721095753451,
          "duration" : 10924
        }
      }, {
        "uid" : "f0c995c9dc3a2366",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/54//#testresult/f0c995c9dc3a2366",
        "status" : "passed",
        "time" : {
          "start" : 1721009553637,
          "stop" : 1721009564558,
          "duration" : 10921
        }
      }, {
        "uid" : "ba48028d867ad945",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/53//#testresult/ba48028d867ad945",
        "status" : "passed",
        "time" : {
          "start" : 1720923322616,
          "stop" : 1720923333485,
          "duration" : 10869
        }
      }, {
        "uid" : "fc109a670ee3890e",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/52//#testresult/fc109a670ee3890e",
        "status" : "passed",
        "time" : {
          "start" : 1720836359771,
          "stop" : 1720836370577,
          "duration" : 10806
        }
      }, {
        "uid" : "cac5afd244dd9ec7",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/51//#testresult/cac5afd244dd9ec7",
        "status" : "passed",
        "time" : {
          "start" : 1720749956465,
          "stop" : 1720749967284,
          "duration" : 10819
        }
      }, {
        "uid" : "25ff6e275a37380b",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/50//#testresult/25ff6e275a37380b",
        "status" : "passed",
        "time" : {
          "start" : 1720663684674,
          "stop" : 1720663695487,
          "duration" : 10813
        }
      }, {
        "uid" : "6cf688999157c4cf",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/49//#testresult/6cf688999157c4cf",
        "status" : "passed",
        "time" : {
          "start" : 1720577220036,
          "stop" : 1720577230864,
          "duration" : 10828
        }
      }, {
        "uid" : "c742e24ebb2dda5d",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/48//#testresult/c742e24ebb2dda5d",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x555d9fa6ec7a <unknown>\n#1 0x555d9f751e2c <unknown>\n#2 0x555d9f79e661 <unknown>\n#3 0x555d9f79e751 <unknown>\n#4 0x555d9f7e2f64 <unknown>\n#5 0x555d9f7c15ed <unknown>\n#6 0x555d9f7e0303 <unknown>\n#7 0x555d9f7c1363 <unknown>\n#8 0x555d9f791247 <unknown>\n#9 0x555d9f791b9e <unknown>\n#10 0x555d9fa3524b <unknown>\n#11 0x555d9fa392f1 <unknown>\n#12 0x555d9fa20afe <unknown>\n#13 0x555d9fa39e52 <unknown>\n#14 0x555d9fa0579f <unknown>\n#15 0x555d9fa5e638 <unknown>\n#16 0x555d9fa5e810 <unknown>\n#17 0x555d9fa6ddac <unknown>\n#18 0x7f73a9294ac3 <unknown>",
        "time" : {
          "start" : 1720490838087,
          "stop" : 1720490838087,
          "duration" : 0
        }
      }, {
        "uid" : "286869d454b3513c",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/47//#testresult/286869d454b3513c",
        "status" : "passed",
        "time" : {
          "start" : 1720404498210,
          "stop" : 1720404509131,
          "duration" : 10921
        }
      }, {
        "uid" : "2c1091989ab691fc",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/46//#testresult/2c1091989ab691fc",
        "status" : "passed",
        "time" : {
          "start" : 1720318286796,
          "stop" : 1720318297634,
          "duration" : 10838
        }
      }, {
        "uid" : "1e1a95d85d492ce0",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/45//#testresult/1e1a95d85d492ce0",
        "status" : "passed",
        "time" : {
          "start" : 1720231357630,
          "stop" : 1720231368522,
          "duration" : 10892
        }
      }, {
        "uid" : "76631414b9895ef4",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/44//#testresult/76631414b9895ef4",
        "status" : "passed",
        "time" : {
          "start" : 1720145084990,
          "stop" : 1720145095794,
          "duration" : 10804
        }
      }, {
        "uid" : "d93653ffad17e6e1",
        "reportUrl" : "https://Nat754.github.io/DealerPassport/43//#testresult/d93653ffad17e6e1",
        "status" : "passed",
        "time" : {
          "start" : 1720058755966,
          "stop" : 1720058766808,
          "duration" : 10842
        }
      } ]
    },
    "tags" : [ "smoke_test" ]
  },
  "source" : "d06133a63535ed1d.json",
  "parameterValues" : [ "'https://dealer-passport-test.xsfera.ru/q/'" ]
}